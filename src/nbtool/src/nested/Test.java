// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: autowrap/test/test.proto

public final class Test {
  private Test() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface TestMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string string_test = 1;
    /**
     * <code>required string string_test = 1;</code>
     *
     * <pre>
     *test comment
     * </pre>
     */
    boolean hasStringTest();
    /**
     * <code>required string string_test = 1;</code>
     *
     * <pre>
     *test comment
     * </pre>
     */
    java.lang.String getStringTest();
    /**
     * <code>required string string_test = 1;</code>
     *
     * <pre>
     *test comment
     * </pre>
     */
    com.google.protobuf.ByteString
        getStringTestBytes();

    // required bytes bytes_test = 2;
    /**
     * <code>required bytes bytes_test = 2;</code>
     */
    boolean hasBytesTest();
    /**
     * <code>required bytes bytes_test = 2;</code>
     */
    com.google.protobuf.ByteString getBytesTest();

    // required int32 int32_test = 3 [default = 1];
    /**
     * <code>required int32 int32_test = 3 [default = 1];</code>
     */
    boolean hasInt32Test();
    /**
     * <code>required int32 int32_test = 3 [default = 1];</code>
     */
    int getInt32Test();

    // required int64 int64_test = 4;
    /**
     * <code>required int64 int64_test = 4;</code>
     */
    boolean hasInt64Test();
    /**
     * <code>required int64 int64_test = 4;</code>
     */
    long getInt64Test();

    // required uint32 uint32_test = 5;
    /**
     * <code>required uint32 uint32_test = 5;</code>
     */
    boolean hasUint32Test();
    /**
     * <code>required uint32 uint32_test = 5;</code>
     */
    int getUint32Test();

    // required uint64 uint64_test = 6;
    /**
     * <code>required uint64 uint64_test = 6;</code>
     */
    boolean hasUint64Test();
    /**
     * <code>required uint64 uint64_test = 6;</code>
     */
    long getUint64Test();

    // required sint32 sint32_test = 7;
    /**
     * <code>required sint32 sint32_test = 7;</code>
     */
    boolean hasSint32Test();
    /**
     * <code>required sint32 sint32_test = 7;</code>
     */
    int getSint32Test();

    // required sint64 sint64_test = 8;
    /**
     * <code>required sint64 sint64_test = 8;</code>
     */
    boolean hasSint64Test();
    /**
     * <code>required sint64 sint64_test = 8;</code>
     */
    long getSint64Test();

    // required fixed32 fixed32_test = 9;
    /**
     * <code>required fixed32 fixed32_test = 9;</code>
     */
    boolean hasFixed32Test();
    /**
     * <code>required fixed32 fixed32_test = 9;</code>
     */
    int getFixed32Test();

    // required fixed64 fixed64_test = 10;
    /**
     * <code>required fixed64 fixed64_test = 10;</code>
     */
    boolean hasFixed64Test();
    /**
     * <code>required fixed64 fixed64_test = 10;</code>
     */
    long getFixed64Test();

    // required sfixed32 sfixed32_test = 11;
    /**
     * <code>required sfixed32 sfixed32_test = 11;</code>
     */
    boolean hasSfixed32Test();
    /**
     * <code>required sfixed32 sfixed32_test = 11;</code>
     */
    int getSfixed32Test();

    // required sfixed64 sfixed64_test = 12;
    /**
     * <code>required sfixed64 sfixed64_test = 12;</code>
     */
    boolean hasSfixed64Test();
    /**
     * <code>required sfixed64 sfixed64_test = 12;</code>
     */
    long getSfixed64Test();

    // required float float_test = 13;
    /**
     * <code>required float float_test = 13;</code>
     */
    boolean hasFloatTest();
    /**
     * <code>required float float_test = 13;</code>
     */
    float getFloatTest();

    // required double double_test = 14;
    /**
     * <code>required double double_test = 14;</code>
     */
    boolean hasDoubleTest();
    /**
     * <code>required double double_test = 14;</code>
     */
    double getDoubleTest();

    // required bool bool_test = 15;
    /**
     * <code>required bool bool_test = 15;</code>
     */
    boolean hasBoolTest();
    /**
     * <code>required bool bool_test = 15;</code>
     */
    boolean getBoolTest();

    // required .TestMessage.TestEnum enum_test = 16;
    /**
     * <code>required .TestMessage.TestEnum enum_test = 16;</code>
     *
     * <pre>
     *[default = TEST_ENUM_0];
     * </pre>
     */
    boolean hasEnumTest();
    /**
     * <code>required .TestMessage.TestEnum enum_test = 16;</code>
     *
     * <pre>
     *[default = TEST_ENUM_0];
     * </pre>
     */
    Test.TestMessage.TestEnum getEnumTest();

    // required .TestMessage.NestedTestMessage nested_message_test = 17;
    /**
     * <code>required .TestMessage.NestedTestMessage nested_message_test = 17;</code>
     */
    boolean hasNestedMessageTest();
    /**
     * <code>required .TestMessage.NestedTestMessage nested_message_test = 17;</code>
     */
    Test.TestMessage.NestedTestMessage getNestedMessageTest();
    /**
     * <code>required .TestMessage.NestedTestMessage nested_message_test = 17;</code>
     */
    Test.TestMessage.NestedTestMessageOrBuilder getNestedMessageTestOrBuilder();

    // repeated .TestMessage.NestedTestMessage repeated_nested_message_test = 18;
    /**
     * <code>repeated .TestMessage.NestedTestMessage repeated_nested_message_test = 18;</code>
     */
    java.util.List<Test.TestMessage.NestedTestMessage> 
        getRepeatedNestedMessageTestList();
    /**
     * <code>repeated .TestMessage.NestedTestMessage repeated_nested_message_test = 18;</code>
     */
    Test.TestMessage.NestedTestMessage getRepeatedNestedMessageTest(int index);
    /**
     * <code>repeated .TestMessage.NestedTestMessage repeated_nested_message_test = 18;</code>
     */
    int getRepeatedNestedMessageTestCount();
    /**
     * <code>repeated .TestMessage.NestedTestMessage repeated_nested_message_test = 18;</code>
     */
    java.util.List<? extends Test.TestMessage.NestedTestMessageOrBuilder> 
        getRepeatedNestedMessageTestOrBuilderList();
    /**
     * <code>repeated .TestMessage.NestedTestMessage repeated_nested_message_test = 18;</code>
     */
    Test.TestMessage.NestedTestMessageOrBuilder getRepeatedNestedMessageTestOrBuilder(
        int index);

    // repeated int32 repeated_int32_test = 19;
    /**
     * <code>repeated int32 repeated_int32_test = 19;</code>
     */
    java.util.List<java.lang.Integer> getRepeatedInt32TestList();
    /**
     * <code>repeated int32 repeated_int32_test = 19;</code>
     */
    int getRepeatedInt32TestCount();
    /**
     * <code>repeated int32 repeated_int32_test = 19;</code>
     */
    int getRepeatedInt32Test(int index);

    // repeated string repeated_string_test = 20;
    /**
     * <code>repeated string repeated_string_test = 20;</code>
     */
    java.util.List<java.lang.String>
    getRepeatedStringTestList();
    /**
     * <code>repeated string repeated_string_test = 20;</code>
     */
    int getRepeatedStringTestCount();
    /**
     * <code>repeated string repeated_string_test = 20;</code>
     */
    java.lang.String getRepeatedStringTest(int index);
    /**
     * <code>repeated string repeated_string_test = 20;</code>
     */
    com.google.protobuf.ByteString
        getRepeatedStringTestBytes(int index);

    // required string camelCaseString = 21;
    /**
     * <code>required string camelCaseString = 21;</code>
     */
    boolean hasCamelCaseString();
    /**
     * <code>required string camelCaseString = 21;</code>
     */
    java.lang.String getCamelCaseString();
    /**
     * <code>required string camelCaseString = 21;</code>
     */
    com.google.protobuf.ByteString
        getCamelCaseStringBytes();

    // repeated .TestMessage2 forward_message_test = 22;
    /**
     * <code>repeated .TestMessage2 forward_message_test = 22;</code>
     */
    java.util.List<Test.TestMessage2> 
        getForwardMessageTestList();
    /**
     * <code>repeated .TestMessage2 forward_message_test = 22;</code>
     */
    Test.TestMessage2 getForwardMessageTest(int index);
    /**
     * <code>repeated .TestMessage2 forward_message_test = 22;</code>
     */
    int getForwardMessageTestCount();
    /**
     * <code>repeated .TestMessage2 forward_message_test = 22;</code>
     */
    java.util.List<? extends Test.TestMessage2OrBuilder> 
        getForwardMessageTestOrBuilderList();
    /**
     * <code>repeated .TestMessage2 forward_message_test = 22;</code>
     */
    Test.TestMessage2OrBuilder getForwardMessageTestOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code TestMessage}
   *
   * <pre>
   *test comment
   * </pre>
   */
  public static final class TestMessage extends
      com.google.protobuf.GeneratedMessage
      implements TestMessageOrBuilder {
    // Use TestMessage.newBuilder() to construct.
    private TestMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TestMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TestMessage defaultInstance;
    public static TestMessage getDefaultInstance() {
      return defaultInstance;
    }

    public TestMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TestMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              stringTest_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              bytesTest_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              int32Test_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              int64Test_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              uint32Test_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              uint64Test_ = input.readUInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              sint32Test_ = input.readSInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              sint64Test_ = input.readSInt64();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              fixed32Test_ = input.readFixed32();
              break;
            }
            case 81: {
              bitField0_ |= 0x00000200;
              fixed64Test_ = input.readFixed64();
              break;
            }
            case 93: {
              bitField0_ |= 0x00000400;
              sfixed32Test_ = input.readSFixed32();
              break;
            }
            case 97: {
              bitField0_ |= 0x00000800;
              sfixed64Test_ = input.readSFixed64();
              break;
            }
            case 109: {
              bitField0_ |= 0x00001000;
              floatTest_ = input.readFloat();
              break;
            }
            case 113: {
              bitField0_ |= 0x00002000;
              doubleTest_ = input.readDouble();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              boolTest_ = input.readBool();
              break;
            }
            case 128: {
              int rawValue = input.readEnum();
              Test.TestMessage.TestEnum value = Test.TestMessage.TestEnum.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(16, rawValue);
              } else {
                bitField0_ |= 0x00008000;
                enumTest_ = value;
              }
              break;
            }
            case 138: {
              Test.TestMessage.NestedTestMessage.Builder subBuilder = null;
              if (((bitField0_ & 0x00010000) == 0x00010000)) {
                subBuilder = nestedMessageTest_.toBuilder();
              }
              nestedMessageTest_ = input.readMessage(Test.TestMessage.NestedTestMessage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(nestedMessageTest_);
                nestedMessageTest_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00010000;
              break;
            }
            case 146: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                repeatedNestedMessageTest_ = new java.util.ArrayList<Test.TestMessage.NestedTestMessage>();
                mutable_bitField0_ |= 0x00020000;
              }
              repeatedNestedMessageTest_.add(input.readMessage(Test.TestMessage.NestedTestMessage.PARSER, extensionRegistry));
              break;
            }
            case 152: {
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                repeatedInt32Test_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00040000;
              }
              repeatedInt32Test_.add(input.readInt32());
              break;
            }
            case 154: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000) && input.getBytesUntilLimit() > 0) {
                repeatedInt32Test_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00040000;
              }
              while (input.getBytesUntilLimit() > 0) {
                repeatedInt32Test_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 162: {
              if (!((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
                repeatedStringTest_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00080000;
              }
              repeatedStringTest_.add(input.readBytes());
              break;
            }
            case 170: {
              bitField0_ |= 0x00020000;
              camelCaseString_ = input.readBytes();
              break;
            }
            case 178: {
              if (!((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
                forwardMessageTest_ = new java.util.ArrayList<Test.TestMessage2>();
                mutable_bitField0_ |= 0x00200000;
              }
              forwardMessageTest_.add(input.readMessage(Test.TestMessage2.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          repeatedNestedMessageTest_ = java.util.Collections.unmodifiableList(repeatedNestedMessageTest_);
        }
        if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
          repeatedInt32Test_ = java.util.Collections.unmodifiableList(repeatedInt32Test_);
        }
        if (((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
          repeatedStringTest_ = new com.google.protobuf.UnmodifiableLazyStringList(repeatedStringTest_);
        }
        if (((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
          forwardMessageTest_ = java.util.Collections.unmodifiableList(forwardMessageTest_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Test.internal_static_TestMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Test.internal_static_TestMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Test.TestMessage.class, Test.TestMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<TestMessage> PARSER =
        new com.google.protobuf.AbstractParser<TestMessage>() {
      public TestMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TestMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TestMessage> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code TestMessage.TestEnum}
     */
    public enum TestEnum
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>TEST_ENUM_0 = 0;</code>
       *
       * <pre>
       * test comment
       * </pre>
       */
      TEST_ENUM_0(0, 0),
      /**
       * <code>TEST_ENUM_1 = 1;</code>
       */
      TEST_ENUM_1(1, 1),
      /**
       * <code>TEST_ENUM_2 = 2;</code>
       */
      TEST_ENUM_2(2, 2),
      ;

      /**
       * <code>TEST_ENUM_0 = 0;</code>
       *
       * <pre>
       * test comment
       * </pre>
       */
      public static final int TEST_ENUM_0_VALUE = 0;
      /**
       * <code>TEST_ENUM_1 = 1;</code>
       */
      public static final int TEST_ENUM_1_VALUE = 1;
      /**
       * <code>TEST_ENUM_2 = 2;</code>
       */
      public static final int TEST_ENUM_2_VALUE = 2;


      public final int getNumber() { return value; }

      public static TestEnum valueOf(int value) {
        switch (value) {
          case 0: return TEST_ENUM_0;
          case 1: return TEST_ENUM_1;
          case 2: return TEST_ENUM_2;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<TestEnum>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<TestEnum>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<TestEnum>() {
              public TestEnum findValueByNumber(int number) {
                return TestEnum.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return Test.TestMessage.getDescriptor().getEnumTypes().get(0);
      }

      private static final TestEnum[] VALUES = values();

      public static TestEnum valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private TestEnum(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:TestMessage.TestEnum)
    }

    public interface NestedTestMessageOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required string string_test = 1;
      /**
       * <code>required string string_test = 1;</code>
       */
      boolean hasStringTest();
      /**
       * <code>required string string_test = 1;</code>
       */
      java.lang.String getStringTest();
      /**
       * <code>required string string_test = 1;</code>
       */
      com.google.protobuf.ByteString
          getStringTestBytes();
    }
    /**
     * Protobuf type {@code TestMessage.NestedTestMessage}
     */
    public static final class NestedTestMessage extends
        com.google.protobuf.GeneratedMessage
        implements NestedTestMessageOrBuilder {
      // Use NestedTestMessage.newBuilder() to construct.
      private NestedTestMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private NestedTestMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final NestedTestMessage defaultInstance;
      public static NestedTestMessage getDefaultInstance() {
        return defaultInstance;
      }

      public NestedTestMessage getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private NestedTestMessage(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                stringTest_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Test.internal_static_TestMessage_NestedTestMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Test.internal_static_TestMessage_NestedTestMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Test.TestMessage.NestedTestMessage.class, Test.TestMessage.NestedTestMessage.Builder.class);
      }

      public static com.google.protobuf.Parser<NestedTestMessage> PARSER =
          new com.google.protobuf.AbstractParser<NestedTestMessage>() {
        public NestedTestMessage parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new NestedTestMessage(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<NestedTestMessage> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required string string_test = 1;
      public static final int STRING_TEST_FIELD_NUMBER = 1;
      private java.lang.Object stringTest_;
      /**
       * <code>required string string_test = 1;</code>
       */
      public boolean hasStringTest() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string string_test = 1;</code>
       */
      public java.lang.String getStringTest() {
        java.lang.Object ref = stringTest_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            stringTest_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string string_test = 1;</code>
       */
      public com.google.protobuf.ByteString
          getStringTestBytes() {
        java.lang.Object ref = stringTest_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stringTest_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        stringTest_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasStringTest()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getStringTestBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getStringTestBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static Test.TestMessage.NestedTestMessage parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Test.TestMessage.NestedTestMessage parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Test.TestMessage.NestedTestMessage parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Test.TestMessage.NestedTestMessage parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Test.TestMessage.NestedTestMessage parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static Test.TestMessage.NestedTestMessage parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static Test.TestMessage.NestedTestMessage parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static Test.TestMessage.NestedTestMessage parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static Test.TestMessage.NestedTestMessage parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static Test.TestMessage.NestedTestMessage parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(Test.TestMessage.NestedTestMessage prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code TestMessage.NestedTestMessage}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements Test.TestMessage.NestedTestMessageOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return Test.internal_static_TestMessage_NestedTestMessage_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return Test.internal_static_TestMessage_NestedTestMessage_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  Test.TestMessage.NestedTestMessage.class, Test.TestMessage.NestedTestMessage.Builder.class);
        }

        // Construct using Test.TestMessage.NestedTestMessage.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          stringTest_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return Test.internal_static_TestMessage_NestedTestMessage_descriptor;
        }

        public Test.TestMessage.NestedTestMessage getDefaultInstanceForType() {
          return Test.TestMessage.NestedTestMessage.getDefaultInstance();
        }

        public Test.TestMessage.NestedTestMessage build() {
          Test.TestMessage.NestedTestMessage result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public Test.TestMessage.NestedTestMessage buildPartial() {
          Test.TestMessage.NestedTestMessage result = new Test.TestMessage.NestedTestMessage(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.stringTest_ = stringTest_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof Test.TestMessage.NestedTestMessage) {
            return mergeFrom((Test.TestMessage.NestedTestMessage)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(Test.TestMessage.NestedTestMessage other) {
          if (other == Test.TestMessage.NestedTestMessage.getDefaultInstance()) return this;
          if (other.hasStringTest()) {
            bitField0_ |= 0x00000001;
            stringTest_ = other.stringTest_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasStringTest()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Test.TestMessage.NestedTestMessage parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (Test.TestMessage.NestedTestMessage) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required string string_test = 1;
        private java.lang.Object stringTest_ = "";
        /**
         * <code>required string string_test = 1;</code>
         */
        public boolean hasStringTest() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string string_test = 1;</code>
         */
        public java.lang.String getStringTest() {
          java.lang.Object ref = stringTest_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            stringTest_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string string_test = 1;</code>
         */
        public com.google.protobuf.ByteString
            getStringTestBytes() {
          java.lang.Object ref = stringTest_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            stringTest_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string string_test = 1;</code>
         */
        public Builder setStringTest(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          stringTest_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string string_test = 1;</code>
         */
        public Builder clearStringTest() {
          bitField0_ = (bitField0_ & ~0x00000001);
          stringTest_ = getDefaultInstance().getStringTest();
          onChanged();
          return this;
        }
        /**
         * <code>required string string_test = 1;</code>
         */
        public Builder setStringTestBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          stringTest_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:TestMessage.NestedTestMessage)
      }

      static {
        defaultInstance = new NestedTestMessage(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:TestMessage.NestedTestMessage)
    }

    public interface NestedTestMessage2OrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required string string_test = 1;
      /**
       * <code>required string string_test = 1;</code>
       */
      boolean hasStringTest();
      /**
       * <code>required string string_test = 1;</code>
       */
      java.lang.String getStringTest();
      /**
       * <code>required string string_test = 1;</code>
       */
      com.google.protobuf.ByteString
          getStringTestBytes();
    }
    /**
     * Protobuf type {@code TestMessage.NestedTestMessage2}
     */
    public static final class NestedTestMessage2 extends
        com.google.protobuf.GeneratedMessage
        implements NestedTestMessage2OrBuilder {
      // Use NestedTestMessage2.newBuilder() to construct.
      private NestedTestMessage2(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private NestedTestMessage2(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final NestedTestMessage2 defaultInstance;
      public static NestedTestMessage2 getDefaultInstance() {
        return defaultInstance;
      }

      public NestedTestMessage2 getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private NestedTestMessage2(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                stringTest_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Test.internal_static_TestMessage_NestedTestMessage2_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Test.internal_static_TestMessage_NestedTestMessage2_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Test.TestMessage.NestedTestMessage2.class, Test.TestMessage.NestedTestMessage2.Builder.class);
      }

      public static com.google.protobuf.Parser<NestedTestMessage2> PARSER =
          new com.google.protobuf.AbstractParser<NestedTestMessage2>() {
        public NestedTestMessage2 parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new NestedTestMessage2(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<NestedTestMessage2> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required string string_test = 1;
      public static final int STRING_TEST_FIELD_NUMBER = 1;
      private java.lang.Object stringTest_;
      /**
       * <code>required string string_test = 1;</code>
       */
      public boolean hasStringTest() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string string_test = 1;</code>
       */
      public java.lang.String getStringTest() {
        java.lang.Object ref = stringTest_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            stringTest_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string string_test = 1;</code>
       */
      public com.google.protobuf.ByteString
          getStringTestBytes() {
        java.lang.Object ref = stringTest_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stringTest_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        stringTest_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasStringTest()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getStringTestBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getStringTestBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static Test.TestMessage.NestedTestMessage2 parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Test.TestMessage.NestedTestMessage2 parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Test.TestMessage.NestedTestMessage2 parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Test.TestMessage.NestedTestMessage2 parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Test.TestMessage.NestedTestMessage2 parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static Test.TestMessage.NestedTestMessage2 parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static Test.TestMessage.NestedTestMessage2 parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static Test.TestMessage.NestedTestMessage2 parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static Test.TestMessage.NestedTestMessage2 parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static Test.TestMessage.NestedTestMessage2 parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(Test.TestMessage.NestedTestMessage2 prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code TestMessage.NestedTestMessage2}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements Test.TestMessage.NestedTestMessage2OrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return Test.internal_static_TestMessage_NestedTestMessage2_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return Test.internal_static_TestMessage_NestedTestMessage2_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  Test.TestMessage.NestedTestMessage2.class, Test.TestMessage.NestedTestMessage2.Builder.class);
        }

        // Construct using Test.TestMessage.NestedTestMessage2.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          stringTest_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return Test.internal_static_TestMessage_NestedTestMessage2_descriptor;
        }

        public Test.TestMessage.NestedTestMessage2 getDefaultInstanceForType() {
          return Test.TestMessage.NestedTestMessage2.getDefaultInstance();
        }

        public Test.TestMessage.NestedTestMessage2 build() {
          Test.TestMessage.NestedTestMessage2 result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public Test.TestMessage.NestedTestMessage2 buildPartial() {
          Test.TestMessage.NestedTestMessage2 result = new Test.TestMessage.NestedTestMessage2(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.stringTest_ = stringTest_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof Test.TestMessage.NestedTestMessage2) {
            return mergeFrom((Test.TestMessage.NestedTestMessage2)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(Test.TestMessage.NestedTestMessage2 other) {
          if (other == Test.TestMessage.NestedTestMessage2.getDefaultInstance()) return this;
          if (other.hasStringTest()) {
            bitField0_ |= 0x00000001;
            stringTest_ = other.stringTest_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasStringTest()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Test.TestMessage.NestedTestMessage2 parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (Test.TestMessage.NestedTestMessage2) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required string string_test = 1;
        private java.lang.Object stringTest_ = "";
        /**
         * <code>required string string_test = 1;</code>
         */
        public boolean hasStringTest() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string string_test = 1;</code>
         */
        public java.lang.String getStringTest() {
          java.lang.Object ref = stringTest_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            stringTest_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string string_test = 1;</code>
         */
        public com.google.protobuf.ByteString
            getStringTestBytes() {
          java.lang.Object ref = stringTest_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            stringTest_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string string_test = 1;</code>
         */
        public Builder setStringTest(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          stringTest_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string string_test = 1;</code>
         */
        public Builder clearStringTest() {
          bitField0_ = (bitField0_ & ~0x00000001);
          stringTest_ = getDefaultInstance().getStringTest();
          onChanged();
          return this;
        }
        /**
         * <code>required string string_test = 1;</code>
         */
        public Builder setStringTestBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          stringTest_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:TestMessage.NestedTestMessage2)
      }

      static {
        defaultInstance = new NestedTestMessage2(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:TestMessage.NestedTestMessage2)
    }

    private int bitField0_;
    // required string string_test = 1;
    public static final int STRING_TEST_FIELD_NUMBER = 1;
    private java.lang.Object stringTest_;
    /**
     * <code>required string string_test = 1;</code>
     *
     * <pre>
     *test comment
     * </pre>
     */
    public boolean hasStringTest() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string string_test = 1;</code>
     *
     * <pre>
     *test comment
     * </pre>
     */
    public java.lang.String getStringTest() {
      java.lang.Object ref = stringTest_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          stringTest_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string string_test = 1;</code>
     *
     * <pre>
     *test comment
     * </pre>
     */
    public com.google.protobuf.ByteString
        getStringTestBytes() {
      java.lang.Object ref = stringTest_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stringTest_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required bytes bytes_test = 2;
    public static final int BYTES_TEST_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString bytesTest_;
    /**
     * <code>required bytes bytes_test = 2;</code>
     */
    public boolean hasBytesTest() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes bytes_test = 2;</code>
     */
    public com.google.protobuf.ByteString getBytesTest() {
      return bytesTest_;
    }

    // required int32 int32_test = 3 [default = 1];
    public static final int INT32_TEST_FIELD_NUMBER = 3;
    private int int32Test_;
    /**
     * <code>required int32 int32_test = 3 [default = 1];</code>
     */
    public boolean hasInt32Test() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 int32_test = 3 [default = 1];</code>
     */
    public int getInt32Test() {
      return int32Test_;
    }

    // required int64 int64_test = 4;
    public static final int INT64_TEST_FIELD_NUMBER = 4;
    private long int64Test_;
    /**
     * <code>required int64 int64_test = 4;</code>
     */
    public boolean hasInt64Test() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int64 int64_test = 4;</code>
     */
    public long getInt64Test() {
      return int64Test_;
    }

    // required uint32 uint32_test = 5;
    public static final int UINT32_TEST_FIELD_NUMBER = 5;
    private int uint32Test_;
    /**
     * <code>required uint32 uint32_test = 5;</code>
     */
    public boolean hasUint32Test() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required uint32 uint32_test = 5;</code>
     */
    public int getUint32Test() {
      return uint32Test_;
    }

    // required uint64 uint64_test = 6;
    public static final int UINT64_TEST_FIELD_NUMBER = 6;
    private long uint64Test_;
    /**
     * <code>required uint64 uint64_test = 6;</code>
     */
    public boolean hasUint64Test() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required uint64 uint64_test = 6;</code>
     */
    public long getUint64Test() {
      return uint64Test_;
    }

    // required sint32 sint32_test = 7;
    public static final int SINT32_TEST_FIELD_NUMBER = 7;
    private int sint32Test_;
    /**
     * <code>required sint32 sint32_test = 7;</code>
     */
    public boolean hasSint32Test() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required sint32 sint32_test = 7;</code>
     */
    public int getSint32Test() {
      return sint32Test_;
    }

    // required sint64 sint64_test = 8;
    public static final int SINT64_TEST_FIELD_NUMBER = 8;
    private long sint64Test_;
    /**
     * <code>required sint64 sint64_test = 8;</code>
     */
    public boolean hasSint64Test() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required sint64 sint64_test = 8;</code>
     */
    public long getSint64Test() {
      return sint64Test_;
    }

    // required fixed32 fixed32_test = 9;
    public static final int FIXED32_TEST_FIELD_NUMBER = 9;
    private int fixed32Test_;
    /**
     * <code>required fixed32 fixed32_test = 9;</code>
     */
    public boolean hasFixed32Test() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required fixed32 fixed32_test = 9;</code>
     */
    public int getFixed32Test() {
      return fixed32Test_;
    }

    // required fixed64 fixed64_test = 10;
    public static final int FIXED64_TEST_FIELD_NUMBER = 10;
    private long fixed64Test_;
    /**
     * <code>required fixed64 fixed64_test = 10;</code>
     */
    public boolean hasFixed64Test() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required fixed64 fixed64_test = 10;</code>
     */
    public long getFixed64Test() {
      return fixed64Test_;
    }

    // required sfixed32 sfixed32_test = 11;
    public static final int SFIXED32_TEST_FIELD_NUMBER = 11;
    private int sfixed32Test_;
    /**
     * <code>required sfixed32 sfixed32_test = 11;</code>
     */
    public boolean hasSfixed32Test() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required sfixed32 sfixed32_test = 11;</code>
     */
    public int getSfixed32Test() {
      return sfixed32Test_;
    }

    // required sfixed64 sfixed64_test = 12;
    public static final int SFIXED64_TEST_FIELD_NUMBER = 12;
    private long sfixed64Test_;
    /**
     * <code>required sfixed64 sfixed64_test = 12;</code>
     */
    public boolean hasSfixed64Test() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>required sfixed64 sfixed64_test = 12;</code>
     */
    public long getSfixed64Test() {
      return sfixed64Test_;
    }

    // required float float_test = 13;
    public static final int FLOAT_TEST_FIELD_NUMBER = 13;
    private float floatTest_;
    /**
     * <code>required float float_test = 13;</code>
     */
    public boolean hasFloatTest() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>required float float_test = 13;</code>
     */
    public float getFloatTest() {
      return floatTest_;
    }

    // required double double_test = 14;
    public static final int DOUBLE_TEST_FIELD_NUMBER = 14;
    private double doubleTest_;
    /**
     * <code>required double double_test = 14;</code>
     */
    public boolean hasDoubleTest() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>required double double_test = 14;</code>
     */
    public double getDoubleTest() {
      return doubleTest_;
    }

    // required bool bool_test = 15;
    public static final int BOOL_TEST_FIELD_NUMBER = 15;
    private boolean boolTest_;
    /**
     * <code>required bool bool_test = 15;</code>
     */
    public boolean hasBoolTest() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>required bool bool_test = 15;</code>
     */
    public boolean getBoolTest() {
      return boolTest_;
    }

    // required .TestMessage.TestEnum enum_test = 16;
    public static final int ENUM_TEST_FIELD_NUMBER = 16;
    private Test.TestMessage.TestEnum enumTest_;
    /**
     * <code>required .TestMessage.TestEnum enum_test = 16;</code>
     *
     * <pre>
     *[default = TEST_ENUM_0];
     * </pre>
     */
    public boolean hasEnumTest() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>required .TestMessage.TestEnum enum_test = 16;</code>
     *
     * <pre>
     *[default = TEST_ENUM_0];
     * </pre>
     */
    public Test.TestMessage.TestEnum getEnumTest() {
      return enumTest_;
    }

    // required .TestMessage.NestedTestMessage nested_message_test = 17;
    public static final int NESTED_MESSAGE_TEST_FIELD_NUMBER = 17;
    private Test.TestMessage.NestedTestMessage nestedMessageTest_;
    /**
     * <code>required .TestMessage.NestedTestMessage nested_message_test = 17;</code>
     */
    public boolean hasNestedMessageTest() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>required .TestMessage.NestedTestMessage nested_message_test = 17;</code>
     */
    public Test.TestMessage.NestedTestMessage getNestedMessageTest() {
      return nestedMessageTest_;
    }
    /**
     * <code>required .TestMessage.NestedTestMessage nested_message_test = 17;</code>
     */
    public Test.TestMessage.NestedTestMessageOrBuilder getNestedMessageTestOrBuilder() {
      return nestedMessageTest_;
    }

    // repeated .TestMessage.NestedTestMessage repeated_nested_message_test = 18;
    public static final int REPEATED_NESTED_MESSAGE_TEST_FIELD_NUMBER = 18;
    private java.util.List<Test.TestMessage.NestedTestMessage> repeatedNestedMessageTest_;
    /**
     * <code>repeated .TestMessage.NestedTestMessage repeated_nested_message_test = 18;</code>
     */
    public java.util.List<Test.TestMessage.NestedTestMessage> getRepeatedNestedMessageTestList() {
      return repeatedNestedMessageTest_;
    }
    /**
     * <code>repeated .TestMessage.NestedTestMessage repeated_nested_message_test = 18;</code>
     */
    public java.util.List<? extends Test.TestMessage.NestedTestMessageOrBuilder> 
        getRepeatedNestedMessageTestOrBuilderList() {
      return repeatedNestedMessageTest_;
    }
    /**
     * <code>repeated .TestMessage.NestedTestMessage repeated_nested_message_test = 18;</code>
     */
    public int getRepeatedNestedMessageTestCount() {
      return repeatedNestedMessageTest_.size();
    }
    /**
     * <code>repeated .TestMessage.NestedTestMessage repeated_nested_message_test = 18;</code>
     */
    public Test.TestMessage.NestedTestMessage getRepeatedNestedMessageTest(int index) {
      return repeatedNestedMessageTest_.get(index);
    }
    /**
     * <code>repeated .TestMessage.NestedTestMessage repeated_nested_message_test = 18;</code>
     */
    public Test.TestMessage.NestedTestMessageOrBuilder getRepeatedNestedMessageTestOrBuilder(
        int index) {
      return repeatedNestedMessageTest_.get(index);
    }

    // repeated int32 repeated_int32_test = 19;
    public static final int REPEATED_INT32_TEST_FIELD_NUMBER = 19;
    private java.util.List<java.lang.Integer> repeatedInt32Test_;
    /**
     * <code>repeated int32 repeated_int32_test = 19;</code>
     */
    public java.util.List<java.lang.Integer>
        getRepeatedInt32TestList() {
      return repeatedInt32Test_;
    }
    /**
     * <code>repeated int32 repeated_int32_test = 19;</code>
     */
    public int getRepeatedInt32TestCount() {
      return repeatedInt32Test_.size();
    }
    /**
     * <code>repeated int32 repeated_int32_test = 19;</code>
     */
    public int getRepeatedInt32Test(int index) {
      return repeatedInt32Test_.get(index);
    }

    // repeated string repeated_string_test = 20;
    public static final int REPEATED_STRING_TEST_FIELD_NUMBER = 20;
    private com.google.protobuf.LazyStringList repeatedStringTest_;
    /**
     * <code>repeated string repeated_string_test = 20;</code>
     */
    public java.util.List<java.lang.String>
        getRepeatedStringTestList() {
      return repeatedStringTest_;
    }
    /**
     * <code>repeated string repeated_string_test = 20;</code>
     */
    public int getRepeatedStringTestCount() {
      return repeatedStringTest_.size();
    }
    /**
     * <code>repeated string repeated_string_test = 20;</code>
     */
    public java.lang.String getRepeatedStringTest(int index) {
      return repeatedStringTest_.get(index);
    }
    /**
     * <code>repeated string repeated_string_test = 20;</code>
     */
    public com.google.protobuf.ByteString
        getRepeatedStringTestBytes(int index) {
      return repeatedStringTest_.getByteString(index);
    }

    // required string camelCaseString = 21;
    public static final int CAMELCASESTRING_FIELD_NUMBER = 21;
    private java.lang.Object camelCaseString_;
    /**
     * <code>required string camelCaseString = 21;</code>
     */
    public boolean hasCamelCaseString() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>required string camelCaseString = 21;</code>
     */
    public java.lang.String getCamelCaseString() {
      java.lang.Object ref = camelCaseString_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          camelCaseString_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string camelCaseString = 21;</code>
     */
    public com.google.protobuf.ByteString
        getCamelCaseStringBytes() {
      java.lang.Object ref = camelCaseString_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        camelCaseString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .TestMessage2 forward_message_test = 22;
    public static final int FORWARD_MESSAGE_TEST_FIELD_NUMBER = 22;
    private java.util.List<Test.TestMessage2> forwardMessageTest_;
    /**
     * <code>repeated .TestMessage2 forward_message_test = 22;</code>
     */
    public java.util.List<Test.TestMessage2> getForwardMessageTestList() {
      return forwardMessageTest_;
    }
    /**
     * <code>repeated .TestMessage2 forward_message_test = 22;</code>
     */
    public java.util.List<? extends Test.TestMessage2OrBuilder> 
        getForwardMessageTestOrBuilderList() {
      return forwardMessageTest_;
    }
    /**
     * <code>repeated .TestMessage2 forward_message_test = 22;</code>
     */
    public int getForwardMessageTestCount() {
      return forwardMessageTest_.size();
    }
    /**
     * <code>repeated .TestMessage2 forward_message_test = 22;</code>
     */
    public Test.TestMessage2 getForwardMessageTest(int index) {
      return forwardMessageTest_.get(index);
    }
    /**
     * <code>repeated .TestMessage2 forward_message_test = 22;</code>
     */
    public Test.TestMessage2OrBuilder getForwardMessageTestOrBuilder(
        int index) {
      return forwardMessageTest_.get(index);
    }

    private void initFields() {
      stringTest_ = "";
      bytesTest_ = com.google.protobuf.ByteString.EMPTY;
      int32Test_ = 1;
      int64Test_ = 0L;
      uint32Test_ = 0;
      uint64Test_ = 0L;
      sint32Test_ = 0;
      sint64Test_ = 0L;
      fixed32Test_ = 0;
      fixed64Test_ = 0L;
      sfixed32Test_ = 0;
      sfixed64Test_ = 0L;
      floatTest_ = 0F;
      doubleTest_ = 0D;
      boolTest_ = false;
      enumTest_ = Test.TestMessage.TestEnum.TEST_ENUM_0;
      nestedMessageTest_ = Test.TestMessage.NestedTestMessage.getDefaultInstance();
      repeatedNestedMessageTest_ = java.util.Collections.emptyList();
      repeatedInt32Test_ = java.util.Collections.emptyList();
      repeatedStringTest_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      camelCaseString_ = "";
      forwardMessageTest_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasStringTest()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBytesTest()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInt32Test()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInt64Test()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUint32Test()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUint64Test()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSint32Test()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSint64Test()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFixed32Test()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFixed64Test()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSfixed32Test()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSfixed64Test()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFloatTest()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDoubleTest()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBoolTest()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEnumTest()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNestedMessageTest()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCamelCaseString()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getNestedMessageTest().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getRepeatedNestedMessageTestCount(); i++) {
        if (!getRepeatedNestedMessageTest(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getForwardMessageTestCount(); i++) {
        if (!getForwardMessageTest(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getStringTestBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, bytesTest_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, int32Test_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, int64Test_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, uint32Test_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt64(6, uint64Test_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeSInt32(7, sint32Test_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeSInt64(8, sint64Test_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFixed32(9, fixed32Test_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFixed64(10, fixed64Test_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeSFixed32(11, sfixed32Test_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeSFixed64(12, sfixed64Test_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeFloat(13, floatTest_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeDouble(14, doubleTest_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBool(15, boolTest_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeEnum(16, enumTest_.getNumber());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeMessage(17, nestedMessageTest_);
      }
      for (int i = 0; i < repeatedNestedMessageTest_.size(); i++) {
        output.writeMessage(18, repeatedNestedMessageTest_.get(i));
      }
      for (int i = 0; i < repeatedInt32Test_.size(); i++) {
        output.writeInt32(19, repeatedInt32Test_.get(i));
      }
      for (int i = 0; i < repeatedStringTest_.size(); i++) {
        output.writeBytes(20, repeatedStringTest_.getByteString(i));
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeBytes(21, getCamelCaseStringBytes());
      }
      for (int i = 0; i < forwardMessageTest_.size(); i++) {
        output.writeMessage(22, forwardMessageTest_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getStringTestBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, bytesTest_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, int32Test_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, int64Test_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, uint32Test_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, uint64Test_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(7, sint32Test_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(8, sint64Test_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(9, fixed32Test_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(10, fixed64Test_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(11, sfixed32Test_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed64Size(12, sfixed64Test_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, floatTest_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(14, doubleTest_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, boolTest_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(16, enumTest_.getNumber());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, nestedMessageTest_);
      }
      for (int i = 0; i < repeatedNestedMessageTest_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, repeatedNestedMessageTest_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < repeatedInt32Test_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(repeatedInt32Test_.get(i));
        }
        size += dataSize;
        size += 2 * getRepeatedInt32TestList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < repeatedStringTest_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(repeatedStringTest_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getRepeatedStringTestList().size();
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(21, getCamelCaseStringBytes());
      }
      for (int i = 0; i < forwardMessageTest_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, forwardMessageTest_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Test.TestMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Test.TestMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Test.TestMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Test.TestMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Test.TestMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Test.TestMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Test.TestMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Test.TestMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Test.TestMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Test.TestMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Test.TestMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TestMessage}
     *
     * <pre>
     *test comment
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Test.TestMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Test.internal_static_TestMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Test.internal_static_TestMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Test.TestMessage.class, Test.TestMessage.Builder.class);
      }

      // Construct using Test.TestMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getNestedMessageTestFieldBuilder();
          getRepeatedNestedMessageTestFieldBuilder();
          getForwardMessageTestFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        stringTest_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        bytesTest_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        int32Test_ = 1;
        bitField0_ = (bitField0_ & ~0x00000004);
        int64Test_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        uint32Test_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        uint64Test_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        sint32Test_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        sint64Test_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        fixed32Test_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        fixed64Test_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        sfixed32Test_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        sfixed64Test_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000800);
        floatTest_ = 0F;
        bitField0_ = (bitField0_ & ~0x00001000);
        doubleTest_ = 0D;
        bitField0_ = (bitField0_ & ~0x00002000);
        boolTest_ = false;
        bitField0_ = (bitField0_ & ~0x00004000);
        enumTest_ = Test.TestMessage.TestEnum.TEST_ENUM_0;
        bitField0_ = (bitField0_ & ~0x00008000);
        if (nestedMessageTestBuilder_ == null) {
          nestedMessageTest_ = Test.TestMessage.NestedTestMessage.getDefaultInstance();
        } else {
          nestedMessageTestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        if (repeatedNestedMessageTestBuilder_ == null) {
          repeatedNestedMessageTest_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
        } else {
          repeatedNestedMessageTestBuilder_.clear();
        }
        repeatedInt32Test_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        repeatedStringTest_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00080000);
        camelCaseString_ = "";
        bitField0_ = (bitField0_ & ~0x00100000);
        if (forwardMessageTestBuilder_ == null) {
          forwardMessageTest_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00200000);
        } else {
          forwardMessageTestBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Test.internal_static_TestMessage_descriptor;
      }

      public Test.TestMessage getDefaultInstanceForType() {
        return Test.TestMessage.getDefaultInstance();
      }

      public Test.TestMessage build() {
        Test.TestMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Test.TestMessage buildPartial() {
        Test.TestMessage result = new Test.TestMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.stringTest_ = stringTest_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bytesTest_ = bytesTest_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.int32Test_ = int32Test_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.int64Test_ = int64Test_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.uint32Test_ = uint32Test_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.uint64Test_ = uint64Test_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.sint32Test_ = sint32Test_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.sint64Test_ = sint64Test_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.fixed32Test_ = fixed32Test_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.fixed64Test_ = fixed64Test_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.sfixed32Test_ = sfixed32Test_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.sfixed64Test_ = sfixed64Test_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.floatTest_ = floatTest_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.doubleTest_ = doubleTest_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.boolTest_ = boolTest_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.enumTest_ = enumTest_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        if (nestedMessageTestBuilder_ == null) {
          result.nestedMessageTest_ = nestedMessageTest_;
        } else {
          result.nestedMessageTest_ = nestedMessageTestBuilder_.build();
        }
        if (repeatedNestedMessageTestBuilder_ == null) {
          if (((bitField0_ & 0x00020000) == 0x00020000)) {
            repeatedNestedMessageTest_ = java.util.Collections.unmodifiableList(repeatedNestedMessageTest_);
            bitField0_ = (bitField0_ & ~0x00020000);
          }
          result.repeatedNestedMessageTest_ = repeatedNestedMessageTest_;
        } else {
          result.repeatedNestedMessageTest_ = repeatedNestedMessageTestBuilder_.build();
        }
        if (((bitField0_ & 0x00040000) == 0x00040000)) {
          repeatedInt32Test_ = java.util.Collections.unmodifiableList(repeatedInt32Test_);
          bitField0_ = (bitField0_ & ~0x00040000);
        }
        result.repeatedInt32Test_ = repeatedInt32Test_;
        if (((bitField0_ & 0x00080000) == 0x00080000)) {
          repeatedStringTest_ = new com.google.protobuf.UnmodifiableLazyStringList(
              repeatedStringTest_);
          bitField0_ = (bitField0_ & ~0x00080000);
        }
        result.repeatedStringTest_ = repeatedStringTest_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.camelCaseString_ = camelCaseString_;
        if (forwardMessageTestBuilder_ == null) {
          if (((bitField0_ & 0x00200000) == 0x00200000)) {
            forwardMessageTest_ = java.util.Collections.unmodifiableList(forwardMessageTest_);
            bitField0_ = (bitField0_ & ~0x00200000);
          }
          result.forwardMessageTest_ = forwardMessageTest_;
        } else {
          result.forwardMessageTest_ = forwardMessageTestBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Test.TestMessage) {
          return mergeFrom((Test.TestMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Test.TestMessage other) {
        if (other == Test.TestMessage.getDefaultInstance()) return this;
        if (other.hasStringTest()) {
          bitField0_ |= 0x00000001;
          stringTest_ = other.stringTest_;
          onChanged();
        }
        if (other.hasBytesTest()) {
          setBytesTest(other.getBytesTest());
        }
        if (other.hasInt32Test()) {
          setInt32Test(other.getInt32Test());
        }
        if (other.hasInt64Test()) {
          setInt64Test(other.getInt64Test());
        }
        if (other.hasUint32Test()) {
          setUint32Test(other.getUint32Test());
        }
        if (other.hasUint64Test()) {
          setUint64Test(other.getUint64Test());
        }
        if (other.hasSint32Test()) {
          setSint32Test(other.getSint32Test());
        }
        if (other.hasSint64Test()) {
          setSint64Test(other.getSint64Test());
        }
        if (other.hasFixed32Test()) {
          setFixed32Test(other.getFixed32Test());
        }
        if (other.hasFixed64Test()) {
          setFixed64Test(other.getFixed64Test());
        }
        if (other.hasSfixed32Test()) {
          setSfixed32Test(other.getSfixed32Test());
        }
        if (other.hasSfixed64Test()) {
          setSfixed64Test(other.getSfixed64Test());
        }
        if (other.hasFloatTest()) {
          setFloatTest(other.getFloatTest());
        }
        if (other.hasDoubleTest()) {
          setDoubleTest(other.getDoubleTest());
        }
        if (other.hasBoolTest()) {
          setBoolTest(other.getBoolTest());
        }
        if (other.hasEnumTest()) {
          setEnumTest(other.getEnumTest());
        }
        if (other.hasNestedMessageTest()) {
          mergeNestedMessageTest(other.getNestedMessageTest());
        }
        if (repeatedNestedMessageTestBuilder_ == null) {
          if (!other.repeatedNestedMessageTest_.isEmpty()) {
            if (repeatedNestedMessageTest_.isEmpty()) {
              repeatedNestedMessageTest_ = other.repeatedNestedMessageTest_;
              bitField0_ = (bitField0_ & ~0x00020000);
            } else {
              ensureRepeatedNestedMessageTestIsMutable();
              repeatedNestedMessageTest_.addAll(other.repeatedNestedMessageTest_);
            }
            onChanged();
          }
        } else {
          if (!other.repeatedNestedMessageTest_.isEmpty()) {
            if (repeatedNestedMessageTestBuilder_.isEmpty()) {
              repeatedNestedMessageTestBuilder_.dispose();
              repeatedNestedMessageTestBuilder_ = null;
              repeatedNestedMessageTest_ = other.repeatedNestedMessageTest_;
              bitField0_ = (bitField0_ & ~0x00020000);
              repeatedNestedMessageTestBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRepeatedNestedMessageTestFieldBuilder() : null;
            } else {
              repeatedNestedMessageTestBuilder_.addAllMessages(other.repeatedNestedMessageTest_);
            }
          }
        }
        if (!other.repeatedInt32Test_.isEmpty()) {
          if (repeatedInt32Test_.isEmpty()) {
            repeatedInt32Test_ = other.repeatedInt32Test_;
            bitField0_ = (bitField0_ & ~0x00040000);
          } else {
            ensureRepeatedInt32TestIsMutable();
            repeatedInt32Test_.addAll(other.repeatedInt32Test_);
          }
          onChanged();
        }
        if (!other.repeatedStringTest_.isEmpty()) {
          if (repeatedStringTest_.isEmpty()) {
            repeatedStringTest_ = other.repeatedStringTest_;
            bitField0_ = (bitField0_ & ~0x00080000);
          } else {
            ensureRepeatedStringTestIsMutable();
            repeatedStringTest_.addAll(other.repeatedStringTest_);
          }
          onChanged();
        }
        if (other.hasCamelCaseString()) {
          bitField0_ |= 0x00100000;
          camelCaseString_ = other.camelCaseString_;
          onChanged();
        }
        if (forwardMessageTestBuilder_ == null) {
          if (!other.forwardMessageTest_.isEmpty()) {
            if (forwardMessageTest_.isEmpty()) {
              forwardMessageTest_ = other.forwardMessageTest_;
              bitField0_ = (bitField0_ & ~0x00200000);
            } else {
              ensureForwardMessageTestIsMutable();
              forwardMessageTest_.addAll(other.forwardMessageTest_);
            }
            onChanged();
          }
        } else {
          if (!other.forwardMessageTest_.isEmpty()) {
            if (forwardMessageTestBuilder_.isEmpty()) {
              forwardMessageTestBuilder_.dispose();
              forwardMessageTestBuilder_ = null;
              forwardMessageTest_ = other.forwardMessageTest_;
              bitField0_ = (bitField0_ & ~0x00200000);
              forwardMessageTestBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getForwardMessageTestFieldBuilder() : null;
            } else {
              forwardMessageTestBuilder_.addAllMessages(other.forwardMessageTest_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasStringTest()) {
          
          return false;
        }
        if (!hasBytesTest()) {
          
          return false;
        }
        if (!hasInt32Test()) {
          
          return false;
        }
        if (!hasInt64Test()) {
          
          return false;
        }
        if (!hasUint32Test()) {
          
          return false;
        }
        if (!hasUint64Test()) {
          
          return false;
        }
        if (!hasSint32Test()) {
          
          return false;
        }
        if (!hasSint64Test()) {
          
          return false;
        }
        if (!hasFixed32Test()) {
          
          return false;
        }
        if (!hasFixed64Test()) {
          
          return false;
        }
        if (!hasSfixed32Test()) {
          
          return false;
        }
        if (!hasSfixed64Test()) {
          
          return false;
        }
        if (!hasFloatTest()) {
          
          return false;
        }
        if (!hasDoubleTest()) {
          
          return false;
        }
        if (!hasBoolTest()) {
          
          return false;
        }
        if (!hasEnumTest()) {
          
          return false;
        }
        if (!hasNestedMessageTest()) {
          
          return false;
        }
        if (!hasCamelCaseString()) {
          
          return false;
        }
        if (!getNestedMessageTest().isInitialized()) {
          
          return false;
        }
        for (int i = 0; i < getRepeatedNestedMessageTestCount(); i++) {
          if (!getRepeatedNestedMessageTest(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getForwardMessageTestCount(); i++) {
          if (!getForwardMessageTest(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Test.TestMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Test.TestMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string string_test = 1;
      private java.lang.Object stringTest_ = "";
      /**
       * <code>required string string_test = 1;</code>
       *
       * <pre>
       *test comment
       * </pre>
       */
      public boolean hasStringTest() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string string_test = 1;</code>
       *
       * <pre>
       *test comment
       * </pre>
       */
      public java.lang.String getStringTest() {
        java.lang.Object ref = stringTest_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          stringTest_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string string_test = 1;</code>
       *
       * <pre>
       *test comment
       * </pre>
       */
      public com.google.protobuf.ByteString
          getStringTestBytes() {
        java.lang.Object ref = stringTest_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stringTest_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string string_test = 1;</code>
       *
       * <pre>
       *test comment
       * </pre>
       */
      public Builder setStringTest(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        stringTest_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string string_test = 1;</code>
       *
       * <pre>
       *test comment
       * </pre>
       */
      public Builder clearStringTest() {
        bitField0_ = (bitField0_ & ~0x00000001);
        stringTest_ = getDefaultInstance().getStringTest();
        onChanged();
        return this;
      }
      /**
       * <code>required string string_test = 1;</code>
       *
       * <pre>
       *test comment
       * </pre>
       */
      public Builder setStringTestBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        stringTest_ = value;
        onChanged();
        return this;
      }

      // required bytes bytes_test = 2;
      private com.google.protobuf.ByteString bytesTest_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes bytes_test = 2;</code>
       */
      public boolean hasBytesTest() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes bytes_test = 2;</code>
       */
      public com.google.protobuf.ByteString getBytesTest() {
        return bytesTest_;
      }
      /**
       * <code>required bytes bytes_test = 2;</code>
       */
      public Builder setBytesTest(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        bytesTest_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes bytes_test = 2;</code>
       */
      public Builder clearBytesTest() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bytesTest_ = getDefaultInstance().getBytesTest();
        onChanged();
        return this;
      }

      // required int32 int32_test = 3 [default = 1];
      private int int32Test_ = 1;
      /**
       * <code>required int32 int32_test = 3 [default = 1];</code>
       */
      public boolean hasInt32Test() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 int32_test = 3 [default = 1];</code>
       */
      public int getInt32Test() {
        return int32Test_;
      }
      /**
       * <code>required int32 int32_test = 3 [default = 1];</code>
       */
      public Builder setInt32Test(int value) {
        bitField0_ |= 0x00000004;
        int32Test_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 int32_test = 3 [default = 1];</code>
       */
      public Builder clearInt32Test() {
        bitField0_ = (bitField0_ & ~0x00000004);
        int32Test_ = 1;
        onChanged();
        return this;
      }

      // required int64 int64_test = 4;
      private long int64Test_ ;
      /**
       * <code>required int64 int64_test = 4;</code>
       */
      public boolean hasInt64Test() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int64 int64_test = 4;</code>
       */
      public long getInt64Test() {
        return int64Test_;
      }
      /**
       * <code>required int64 int64_test = 4;</code>
       */
      public Builder setInt64Test(long value) {
        bitField0_ |= 0x00000008;
        int64Test_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 int64_test = 4;</code>
       */
      public Builder clearInt64Test() {
        bitField0_ = (bitField0_ & ~0x00000008);
        int64Test_ = 0L;
        onChanged();
        return this;
      }

      // required uint32 uint32_test = 5;
      private int uint32Test_ ;
      /**
       * <code>required uint32 uint32_test = 5;</code>
       */
      public boolean hasUint32Test() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required uint32 uint32_test = 5;</code>
       */
      public int getUint32Test() {
        return uint32Test_;
      }
      /**
       * <code>required uint32 uint32_test = 5;</code>
       */
      public Builder setUint32Test(int value) {
        bitField0_ |= 0x00000010;
        uint32Test_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 uint32_test = 5;</code>
       */
      public Builder clearUint32Test() {
        bitField0_ = (bitField0_ & ~0x00000010);
        uint32Test_ = 0;
        onChanged();
        return this;
      }

      // required uint64 uint64_test = 6;
      private long uint64Test_ ;
      /**
       * <code>required uint64 uint64_test = 6;</code>
       */
      public boolean hasUint64Test() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required uint64 uint64_test = 6;</code>
       */
      public long getUint64Test() {
        return uint64Test_;
      }
      /**
       * <code>required uint64 uint64_test = 6;</code>
       */
      public Builder setUint64Test(long value) {
        bitField0_ |= 0x00000020;
        uint64Test_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 uint64_test = 6;</code>
       */
      public Builder clearUint64Test() {
        bitField0_ = (bitField0_ & ~0x00000020);
        uint64Test_ = 0L;
        onChanged();
        return this;
      }

      // required sint32 sint32_test = 7;
      private int sint32Test_ ;
      /**
       * <code>required sint32 sint32_test = 7;</code>
       */
      public boolean hasSint32Test() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required sint32 sint32_test = 7;</code>
       */
      public int getSint32Test() {
        return sint32Test_;
      }
      /**
       * <code>required sint32 sint32_test = 7;</code>
       */
      public Builder setSint32Test(int value) {
        bitField0_ |= 0x00000040;
        sint32Test_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 sint32_test = 7;</code>
       */
      public Builder clearSint32Test() {
        bitField0_ = (bitField0_ & ~0x00000040);
        sint32Test_ = 0;
        onChanged();
        return this;
      }

      // required sint64 sint64_test = 8;
      private long sint64Test_ ;
      /**
       * <code>required sint64 sint64_test = 8;</code>
       */
      public boolean hasSint64Test() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required sint64 sint64_test = 8;</code>
       */
      public long getSint64Test() {
        return sint64Test_;
      }
      /**
       * <code>required sint64 sint64_test = 8;</code>
       */
      public Builder setSint64Test(long value) {
        bitField0_ |= 0x00000080;
        sint64Test_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint64 sint64_test = 8;</code>
       */
      public Builder clearSint64Test() {
        bitField0_ = (bitField0_ & ~0x00000080);
        sint64Test_ = 0L;
        onChanged();
        return this;
      }

      // required fixed32 fixed32_test = 9;
      private int fixed32Test_ ;
      /**
       * <code>required fixed32 fixed32_test = 9;</code>
       */
      public boolean hasFixed32Test() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required fixed32 fixed32_test = 9;</code>
       */
      public int getFixed32Test() {
        return fixed32Test_;
      }
      /**
       * <code>required fixed32 fixed32_test = 9;</code>
       */
      public Builder setFixed32Test(int value) {
        bitField0_ |= 0x00000100;
        fixed32Test_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 fixed32_test = 9;</code>
       */
      public Builder clearFixed32Test() {
        bitField0_ = (bitField0_ & ~0x00000100);
        fixed32Test_ = 0;
        onChanged();
        return this;
      }

      // required fixed64 fixed64_test = 10;
      private long fixed64Test_ ;
      /**
       * <code>required fixed64 fixed64_test = 10;</code>
       */
      public boolean hasFixed64Test() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required fixed64 fixed64_test = 10;</code>
       */
      public long getFixed64Test() {
        return fixed64Test_;
      }
      /**
       * <code>required fixed64 fixed64_test = 10;</code>
       */
      public Builder setFixed64Test(long value) {
        bitField0_ |= 0x00000200;
        fixed64Test_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed64 fixed64_test = 10;</code>
       */
      public Builder clearFixed64Test() {
        bitField0_ = (bitField0_ & ~0x00000200);
        fixed64Test_ = 0L;
        onChanged();
        return this;
      }

      // required sfixed32 sfixed32_test = 11;
      private int sfixed32Test_ ;
      /**
       * <code>required sfixed32 sfixed32_test = 11;</code>
       */
      public boolean hasSfixed32Test() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required sfixed32 sfixed32_test = 11;</code>
       */
      public int getSfixed32Test() {
        return sfixed32Test_;
      }
      /**
       * <code>required sfixed32 sfixed32_test = 11;</code>
       */
      public Builder setSfixed32Test(int value) {
        bitField0_ |= 0x00000400;
        sfixed32Test_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sfixed32 sfixed32_test = 11;</code>
       */
      public Builder clearSfixed32Test() {
        bitField0_ = (bitField0_ & ~0x00000400);
        sfixed32Test_ = 0;
        onChanged();
        return this;
      }

      // required sfixed64 sfixed64_test = 12;
      private long sfixed64Test_ ;
      /**
       * <code>required sfixed64 sfixed64_test = 12;</code>
       */
      public boolean hasSfixed64Test() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required sfixed64 sfixed64_test = 12;</code>
       */
      public long getSfixed64Test() {
        return sfixed64Test_;
      }
      /**
       * <code>required sfixed64 sfixed64_test = 12;</code>
       */
      public Builder setSfixed64Test(long value) {
        bitField0_ |= 0x00000800;
        sfixed64Test_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sfixed64 sfixed64_test = 12;</code>
       */
      public Builder clearSfixed64Test() {
        bitField0_ = (bitField0_ & ~0x00000800);
        sfixed64Test_ = 0L;
        onChanged();
        return this;
      }

      // required float float_test = 13;
      private float floatTest_ ;
      /**
       * <code>required float float_test = 13;</code>
       */
      public boolean hasFloatTest() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>required float float_test = 13;</code>
       */
      public float getFloatTest() {
        return floatTest_;
      }
      /**
       * <code>required float float_test = 13;</code>
       */
      public Builder setFloatTest(float value) {
        bitField0_ |= 0x00001000;
        floatTest_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float float_test = 13;</code>
       */
      public Builder clearFloatTest() {
        bitField0_ = (bitField0_ & ~0x00001000);
        floatTest_ = 0F;
        onChanged();
        return this;
      }

      // required double double_test = 14;
      private double doubleTest_ ;
      /**
       * <code>required double double_test = 14;</code>
       */
      public boolean hasDoubleTest() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>required double double_test = 14;</code>
       */
      public double getDoubleTest() {
        return doubleTest_;
      }
      /**
       * <code>required double double_test = 14;</code>
       */
      public Builder setDoubleTest(double value) {
        bitField0_ |= 0x00002000;
        doubleTest_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double double_test = 14;</code>
       */
      public Builder clearDoubleTest() {
        bitField0_ = (bitField0_ & ~0x00002000);
        doubleTest_ = 0D;
        onChanged();
        return this;
      }

      // required bool bool_test = 15;
      private boolean boolTest_ ;
      /**
       * <code>required bool bool_test = 15;</code>
       */
      public boolean hasBoolTest() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>required bool bool_test = 15;</code>
       */
      public boolean getBoolTest() {
        return boolTest_;
      }
      /**
       * <code>required bool bool_test = 15;</code>
       */
      public Builder setBoolTest(boolean value) {
        bitField0_ |= 0x00004000;
        boolTest_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool bool_test = 15;</code>
       */
      public Builder clearBoolTest() {
        bitField0_ = (bitField0_ & ~0x00004000);
        boolTest_ = false;
        onChanged();
        return this;
      }

      // required .TestMessage.TestEnum enum_test = 16;
      private Test.TestMessage.TestEnum enumTest_ = Test.TestMessage.TestEnum.TEST_ENUM_0;
      /**
       * <code>required .TestMessage.TestEnum enum_test = 16;</code>
       *
       * <pre>
       *[default = TEST_ENUM_0];
       * </pre>
       */
      public boolean hasEnumTest() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>required .TestMessage.TestEnum enum_test = 16;</code>
       *
       * <pre>
       *[default = TEST_ENUM_0];
       * </pre>
       */
      public Test.TestMessage.TestEnum getEnumTest() {
        return enumTest_;
      }
      /**
       * <code>required .TestMessage.TestEnum enum_test = 16;</code>
       *
       * <pre>
       *[default = TEST_ENUM_0];
       * </pre>
       */
      public Builder setEnumTest(Test.TestMessage.TestEnum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00008000;
        enumTest_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .TestMessage.TestEnum enum_test = 16;</code>
       *
       * <pre>
       *[default = TEST_ENUM_0];
       * </pre>
       */
      public Builder clearEnumTest() {
        bitField0_ = (bitField0_ & ~0x00008000);
        enumTest_ = Test.TestMessage.TestEnum.TEST_ENUM_0;
        onChanged();
        return this;
      }

      // required .TestMessage.NestedTestMessage nested_message_test = 17;
      private Test.TestMessage.NestedTestMessage nestedMessageTest_ = Test.TestMessage.NestedTestMessage.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Test.TestMessage.NestedTestMessage, Test.TestMessage.NestedTestMessage.Builder, Test.TestMessage.NestedTestMessageOrBuilder> nestedMessageTestBuilder_;
      /**
       * <code>required .TestMessage.NestedTestMessage nested_message_test = 17;</code>
       */
      public boolean hasNestedMessageTest() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>required .TestMessage.NestedTestMessage nested_message_test = 17;</code>
       */
      public Test.TestMessage.NestedTestMessage getNestedMessageTest() {
        if (nestedMessageTestBuilder_ == null) {
          return nestedMessageTest_;
        } else {
          return nestedMessageTestBuilder_.getMessage();
        }
      }
      /**
       * <code>required .TestMessage.NestedTestMessage nested_message_test = 17;</code>
       */
      public Builder setNestedMessageTest(Test.TestMessage.NestedTestMessage value) {
        if (nestedMessageTestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nestedMessageTest_ = value;
          onChanged();
        } else {
          nestedMessageTestBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>required .TestMessage.NestedTestMessage nested_message_test = 17;</code>
       */
      public Builder setNestedMessageTest(
          Test.TestMessage.NestedTestMessage.Builder builderForValue) {
        if (nestedMessageTestBuilder_ == null) {
          nestedMessageTest_ = builderForValue.build();
          onChanged();
        } else {
          nestedMessageTestBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>required .TestMessage.NestedTestMessage nested_message_test = 17;</code>
       */
      public Builder mergeNestedMessageTest(Test.TestMessage.NestedTestMessage value) {
        if (nestedMessageTestBuilder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000) &&
              nestedMessageTest_ != Test.TestMessage.NestedTestMessage.getDefaultInstance()) {
            nestedMessageTest_ =
              Test.TestMessage.NestedTestMessage.newBuilder(nestedMessageTest_).mergeFrom(value).buildPartial();
          } else {
            nestedMessageTest_ = value;
          }
          onChanged();
        } else {
          nestedMessageTestBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>required .TestMessage.NestedTestMessage nested_message_test = 17;</code>
       */
      public Builder clearNestedMessageTest() {
        if (nestedMessageTestBuilder_ == null) {
          nestedMessageTest_ = Test.TestMessage.NestedTestMessage.getDefaultInstance();
          onChanged();
        } else {
          nestedMessageTestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }
      /**
       * <code>required .TestMessage.NestedTestMessage nested_message_test = 17;</code>
       */
      public Test.TestMessage.NestedTestMessage.Builder getNestedMessageTestBuilder() {
        bitField0_ |= 0x00010000;
        onChanged();
        return getNestedMessageTestFieldBuilder().getBuilder();
      }
      /**
       * <code>required .TestMessage.NestedTestMessage nested_message_test = 17;</code>
       */
      public Test.TestMessage.NestedTestMessageOrBuilder getNestedMessageTestOrBuilder() {
        if (nestedMessageTestBuilder_ != null) {
          return nestedMessageTestBuilder_.getMessageOrBuilder();
        } else {
          return nestedMessageTest_;
        }
      }
      /**
       * <code>required .TestMessage.NestedTestMessage nested_message_test = 17;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Test.TestMessage.NestedTestMessage, Test.TestMessage.NestedTestMessage.Builder, Test.TestMessage.NestedTestMessageOrBuilder> 
          getNestedMessageTestFieldBuilder() {
        if (nestedMessageTestBuilder_ == null) {
          nestedMessageTestBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Test.TestMessage.NestedTestMessage, Test.TestMessage.NestedTestMessage.Builder, Test.TestMessage.NestedTestMessageOrBuilder>(
                  nestedMessageTest_,
                  getParentForChildren(),
                  isClean());
          nestedMessageTest_ = null;
        }
        return nestedMessageTestBuilder_;
      }

      // repeated .TestMessage.NestedTestMessage repeated_nested_message_test = 18;
      private java.util.List<Test.TestMessage.NestedTestMessage> repeatedNestedMessageTest_ =
        java.util.Collections.emptyList();
      private void ensureRepeatedNestedMessageTestIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          repeatedNestedMessageTest_ = new java.util.ArrayList<Test.TestMessage.NestedTestMessage>(repeatedNestedMessageTest_);
          bitField0_ |= 0x00020000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          Test.TestMessage.NestedTestMessage, Test.TestMessage.NestedTestMessage.Builder, Test.TestMessage.NestedTestMessageOrBuilder> repeatedNestedMessageTestBuilder_;

      /**
       * <code>repeated .TestMessage.NestedTestMessage repeated_nested_message_test = 18;</code>
       */
      public java.util.List<Test.TestMessage.NestedTestMessage> getRepeatedNestedMessageTestList() {
        if (repeatedNestedMessageTestBuilder_ == null) {
          return java.util.Collections.unmodifiableList(repeatedNestedMessageTest_);
        } else {
          return repeatedNestedMessageTestBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .TestMessage.NestedTestMessage repeated_nested_message_test = 18;</code>
       */
      public int getRepeatedNestedMessageTestCount() {
        if (repeatedNestedMessageTestBuilder_ == null) {
          return repeatedNestedMessageTest_.size();
        } else {
          return repeatedNestedMessageTestBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .TestMessage.NestedTestMessage repeated_nested_message_test = 18;</code>
       */
      public Test.TestMessage.NestedTestMessage getRepeatedNestedMessageTest(int index) {
        if (repeatedNestedMessageTestBuilder_ == null) {
          return repeatedNestedMessageTest_.get(index);
        } else {
          return repeatedNestedMessageTestBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .TestMessage.NestedTestMessage repeated_nested_message_test = 18;</code>
       */
      public Builder setRepeatedNestedMessageTest(
          int index, Test.TestMessage.NestedTestMessage value) {
        if (repeatedNestedMessageTestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRepeatedNestedMessageTestIsMutable();
          repeatedNestedMessageTest_.set(index, value);
          onChanged();
        } else {
          repeatedNestedMessageTestBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TestMessage.NestedTestMessage repeated_nested_message_test = 18;</code>
       */
      public Builder setRepeatedNestedMessageTest(
          int index, Test.TestMessage.NestedTestMessage.Builder builderForValue) {
        if (repeatedNestedMessageTestBuilder_ == null) {
          ensureRepeatedNestedMessageTestIsMutable();
          repeatedNestedMessageTest_.set(index, builderForValue.build());
          onChanged();
        } else {
          repeatedNestedMessageTestBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TestMessage.NestedTestMessage repeated_nested_message_test = 18;</code>
       */
      public Builder addRepeatedNestedMessageTest(Test.TestMessage.NestedTestMessage value) {
        if (repeatedNestedMessageTestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRepeatedNestedMessageTestIsMutable();
          repeatedNestedMessageTest_.add(value);
          onChanged();
        } else {
          repeatedNestedMessageTestBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .TestMessage.NestedTestMessage repeated_nested_message_test = 18;</code>
       */
      public Builder addRepeatedNestedMessageTest(
          int index, Test.TestMessage.NestedTestMessage value) {
        if (repeatedNestedMessageTestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRepeatedNestedMessageTestIsMutable();
          repeatedNestedMessageTest_.add(index, value);
          onChanged();
        } else {
          repeatedNestedMessageTestBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TestMessage.NestedTestMessage repeated_nested_message_test = 18;</code>
       */
      public Builder addRepeatedNestedMessageTest(
          Test.TestMessage.NestedTestMessage.Builder builderForValue) {
        if (repeatedNestedMessageTestBuilder_ == null) {
          ensureRepeatedNestedMessageTestIsMutable();
          repeatedNestedMessageTest_.add(builderForValue.build());
          onChanged();
        } else {
          repeatedNestedMessageTestBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TestMessage.NestedTestMessage repeated_nested_message_test = 18;</code>
       */
      public Builder addRepeatedNestedMessageTest(
          int index, Test.TestMessage.NestedTestMessage.Builder builderForValue) {
        if (repeatedNestedMessageTestBuilder_ == null) {
          ensureRepeatedNestedMessageTestIsMutable();
          repeatedNestedMessageTest_.add(index, builderForValue.build());
          onChanged();
        } else {
          repeatedNestedMessageTestBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TestMessage.NestedTestMessage repeated_nested_message_test = 18;</code>
       */
      public Builder addAllRepeatedNestedMessageTest(
          java.lang.Iterable<? extends Test.TestMessage.NestedTestMessage> values) {
        if (repeatedNestedMessageTestBuilder_ == null) {
          ensureRepeatedNestedMessageTestIsMutable();
          super.addAll(values, repeatedNestedMessageTest_);
          onChanged();
        } else {
          repeatedNestedMessageTestBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .TestMessage.NestedTestMessage repeated_nested_message_test = 18;</code>
       */
      public Builder clearRepeatedNestedMessageTest() {
        if (repeatedNestedMessageTestBuilder_ == null) {
          repeatedNestedMessageTest_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
          onChanged();
        } else {
          repeatedNestedMessageTestBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .TestMessage.NestedTestMessage repeated_nested_message_test = 18;</code>
       */
      public Builder removeRepeatedNestedMessageTest(int index) {
        if (repeatedNestedMessageTestBuilder_ == null) {
          ensureRepeatedNestedMessageTestIsMutable();
          repeatedNestedMessageTest_.remove(index);
          onChanged();
        } else {
          repeatedNestedMessageTestBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .TestMessage.NestedTestMessage repeated_nested_message_test = 18;</code>
       */
      public Test.TestMessage.NestedTestMessage.Builder getRepeatedNestedMessageTestBuilder(
          int index) {
        return getRepeatedNestedMessageTestFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .TestMessage.NestedTestMessage repeated_nested_message_test = 18;</code>
       */
      public Test.TestMessage.NestedTestMessageOrBuilder getRepeatedNestedMessageTestOrBuilder(
          int index) {
        if (repeatedNestedMessageTestBuilder_ == null) {
          return repeatedNestedMessageTest_.get(index);  } else {
          return repeatedNestedMessageTestBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .TestMessage.NestedTestMessage repeated_nested_message_test = 18;</code>
       */
      public java.util.List<? extends Test.TestMessage.NestedTestMessageOrBuilder> 
           getRepeatedNestedMessageTestOrBuilderList() {
        if (repeatedNestedMessageTestBuilder_ != null) {
          return repeatedNestedMessageTestBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(repeatedNestedMessageTest_);
        }
      }
      /**
       * <code>repeated .TestMessage.NestedTestMessage repeated_nested_message_test = 18;</code>
       */
      public Test.TestMessage.NestedTestMessage.Builder addRepeatedNestedMessageTestBuilder() {
        return getRepeatedNestedMessageTestFieldBuilder().addBuilder(
            Test.TestMessage.NestedTestMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .TestMessage.NestedTestMessage repeated_nested_message_test = 18;</code>
       */
      public Test.TestMessage.NestedTestMessage.Builder addRepeatedNestedMessageTestBuilder(
          int index) {
        return getRepeatedNestedMessageTestFieldBuilder().addBuilder(
            index, Test.TestMessage.NestedTestMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .TestMessage.NestedTestMessage repeated_nested_message_test = 18;</code>
       */
      public java.util.List<Test.TestMessage.NestedTestMessage.Builder> 
           getRepeatedNestedMessageTestBuilderList() {
        return getRepeatedNestedMessageTestFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Test.TestMessage.NestedTestMessage, Test.TestMessage.NestedTestMessage.Builder, Test.TestMessage.NestedTestMessageOrBuilder> 
          getRepeatedNestedMessageTestFieldBuilder() {
        if (repeatedNestedMessageTestBuilder_ == null) {
          repeatedNestedMessageTestBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Test.TestMessage.NestedTestMessage, Test.TestMessage.NestedTestMessage.Builder, Test.TestMessage.NestedTestMessageOrBuilder>(
                  repeatedNestedMessageTest_,
                  ((bitField0_ & 0x00020000) == 0x00020000),
                  getParentForChildren(),
                  isClean());
          repeatedNestedMessageTest_ = null;
        }
        return repeatedNestedMessageTestBuilder_;
      }

      // repeated int32 repeated_int32_test = 19;
      private java.util.List<java.lang.Integer> repeatedInt32Test_ = java.util.Collections.emptyList();
      private void ensureRepeatedInt32TestIsMutable() {
        if (!((bitField0_ & 0x00040000) == 0x00040000)) {
          repeatedInt32Test_ = new java.util.ArrayList<java.lang.Integer>(repeatedInt32Test_);
          bitField0_ |= 0x00040000;
         }
      }
      /**
       * <code>repeated int32 repeated_int32_test = 19;</code>
       */
      public java.util.List<java.lang.Integer>
          getRepeatedInt32TestList() {
        return java.util.Collections.unmodifiableList(repeatedInt32Test_);
      }
      /**
       * <code>repeated int32 repeated_int32_test = 19;</code>
       */
      public int getRepeatedInt32TestCount() {
        return repeatedInt32Test_.size();
      }
      /**
       * <code>repeated int32 repeated_int32_test = 19;</code>
       */
      public int getRepeatedInt32Test(int index) {
        return repeatedInt32Test_.get(index);
      }
      /**
       * <code>repeated int32 repeated_int32_test = 19;</code>
       */
      public Builder setRepeatedInt32Test(
          int index, int value) {
        ensureRepeatedInt32TestIsMutable();
        repeatedInt32Test_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 repeated_int32_test = 19;</code>
       */
      public Builder addRepeatedInt32Test(int value) {
        ensureRepeatedInt32TestIsMutable();
        repeatedInt32Test_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 repeated_int32_test = 19;</code>
       */
      public Builder addAllRepeatedInt32Test(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRepeatedInt32TestIsMutable();
        super.addAll(values, repeatedInt32Test_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 repeated_int32_test = 19;</code>
       */
      public Builder clearRepeatedInt32Test() {
        repeatedInt32Test_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        onChanged();
        return this;
      }

      // repeated string repeated_string_test = 20;
      private com.google.protobuf.LazyStringList repeatedStringTest_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureRepeatedStringTestIsMutable() {
        if (!((bitField0_ & 0x00080000) == 0x00080000)) {
          repeatedStringTest_ = new com.google.protobuf.LazyStringArrayList(repeatedStringTest_);
          bitField0_ |= 0x00080000;
         }
      }
      /**
       * <code>repeated string repeated_string_test = 20;</code>
       */
      public java.util.List<java.lang.String>
          getRepeatedStringTestList() {
        return java.util.Collections.unmodifiableList(repeatedStringTest_);
      }
      /**
       * <code>repeated string repeated_string_test = 20;</code>
       */
      public int getRepeatedStringTestCount() {
        return repeatedStringTest_.size();
      }
      /**
       * <code>repeated string repeated_string_test = 20;</code>
       */
      public java.lang.String getRepeatedStringTest(int index) {
        return repeatedStringTest_.get(index);
      }
      /**
       * <code>repeated string repeated_string_test = 20;</code>
       */
      public com.google.protobuf.ByteString
          getRepeatedStringTestBytes(int index) {
        return repeatedStringTest_.getByteString(index);
      }
      /**
       * <code>repeated string repeated_string_test = 20;</code>
       */
      public Builder setRepeatedStringTest(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRepeatedStringTestIsMutable();
        repeatedStringTest_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string repeated_string_test = 20;</code>
       */
      public Builder addRepeatedStringTest(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRepeatedStringTestIsMutable();
        repeatedStringTest_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string repeated_string_test = 20;</code>
       */
      public Builder addAllRepeatedStringTest(
          java.lang.Iterable<java.lang.String> values) {
        ensureRepeatedStringTestIsMutable();
        super.addAll(values, repeatedStringTest_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string repeated_string_test = 20;</code>
       */
      public Builder clearRepeatedStringTest() {
        repeatedStringTest_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00080000);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string repeated_string_test = 20;</code>
       */
      public Builder addRepeatedStringTestBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRepeatedStringTestIsMutable();
        repeatedStringTest_.add(value);
        onChanged();
        return this;
      }

      // required string camelCaseString = 21;
      private java.lang.Object camelCaseString_ = "";
      /**
       * <code>required string camelCaseString = 21;</code>
       */
      public boolean hasCamelCaseString() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>required string camelCaseString = 21;</code>
       */
      public java.lang.String getCamelCaseString() {
        java.lang.Object ref = camelCaseString_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          camelCaseString_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string camelCaseString = 21;</code>
       */
      public com.google.protobuf.ByteString
          getCamelCaseStringBytes() {
        java.lang.Object ref = camelCaseString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          camelCaseString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string camelCaseString = 21;</code>
       */
      public Builder setCamelCaseString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00100000;
        camelCaseString_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string camelCaseString = 21;</code>
       */
      public Builder clearCamelCaseString() {
        bitField0_ = (bitField0_ & ~0x00100000);
        camelCaseString_ = getDefaultInstance().getCamelCaseString();
        onChanged();
        return this;
      }
      /**
       * <code>required string camelCaseString = 21;</code>
       */
      public Builder setCamelCaseStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00100000;
        camelCaseString_ = value;
        onChanged();
        return this;
      }

      // repeated .TestMessage2 forward_message_test = 22;
      private java.util.List<Test.TestMessage2> forwardMessageTest_ =
        java.util.Collections.emptyList();
      private void ensureForwardMessageTestIsMutable() {
        if (!((bitField0_ & 0x00200000) == 0x00200000)) {
          forwardMessageTest_ = new java.util.ArrayList<Test.TestMessage2>(forwardMessageTest_);
          bitField0_ |= 0x00200000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          Test.TestMessage2, Test.TestMessage2.Builder, Test.TestMessage2OrBuilder> forwardMessageTestBuilder_;

      /**
       * <code>repeated .TestMessage2 forward_message_test = 22;</code>
       */
      public java.util.List<Test.TestMessage2> getForwardMessageTestList() {
        if (forwardMessageTestBuilder_ == null) {
          return java.util.Collections.unmodifiableList(forwardMessageTest_);
        } else {
          return forwardMessageTestBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .TestMessage2 forward_message_test = 22;</code>
       */
      public int getForwardMessageTestCount() {
        if (forwardMessageTestBuilder_ == null) {
          return forwardMessageTest_.size();
        } else {
          return forwardMessageTestBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .TestMessage2 forward_message_test = 22;</code>
       */
      public Test.TestMessage2 getForwardMessageTest(int index) {
        if (forwardMessageTestBuilder_ == null) {
          return forwardMessageTest_.get(index);
        } else {
          return forwardMessageTestBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .TestMessage2 forward_message_test = 22;</code>
       */
      public Builder setForwardMessageTest(
          int index, Test.TestMessage2 value) {
        if (forwardMessageTestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureForwardMessageTestIsMutable();
          forwardMessageTest_.set(index, value);
          onChanged();
        } else {
          forwardMessageTestBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TestMessage2 forward_message_test = 22;</code>
       */
      public Builder setForwardMessageTest(
          int index, Test.TestMessage2.Builder builderForValue) {
        if (forwardMessageTestBuilder_ == null) {
          ensureForwardMessageTestIsMutable();
          forwardMessageTest_.set(index, builderForValue.build());
          onChanged();
        } else {
          forwardMessageTestBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TestMessage2 forward_message_test = 22;</code>
       */
      public Builder addForwardMessageTest(Test.TestMessage2 value) {
        if (forwardMessageTestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureForwardMessageTestIsMutable();
          forwardMessageTest_.add(value);
          onChanged();
        } else {
          forwardMessageTestBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .TestMessage2 forward_message_test = 22;</code>
       */
      public Builder addForwardMessageTest(
          int index, Test.TestMessage2 value) {
        if (forwardMessageTestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureForwardMessageTestIsMutable();
          forwardMessageTest_.add(index, value);
          onChanged();
        } else {
          forwardMessageTestBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TestMessage2 forward_message_test = 22;</code>
       */
      public Builder addForwardMessageTest(
          Test.TestMessage2.Builder builderForValue) {
        if (forwardMessageTestBuilder_ == null) {
          ensureForwardMessageTestIsMutable();
          forwardMessageTest_.add(builderForValue.build());
          onChanged();
        } else {
          forwardMessageTestBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TestMessage2 forward_message_test = 22;</code>
       */
      public Builder addForwardMessageTest(
          int index, Test.TestMessage2.Builder builderForValue) {
        if (forwardMessageTestBuilder_ == null) {
          ensureForwardMessageTestIsMutable();
          forwardMessageTest_.add(index, builderForValue.build());
          onChanged();
        } else {
          forwardMessageTestBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TestMessage2 forward_message_test = 22;</code>
       */
      public Builder addAllForwardMessageTest(
          java.lang.Iterable<? extends Test.TestMessage2> values) {
        if (forwardMessageTestBuilder_ == null) {
          ensureForwardMessageTestIsMutable();
          super.addAll(values, forwardMessageTest_);
          onChanged();
        } else {
          forwardMessageTestBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .TestMessage2 forward_message_test = 22;</code>
       */
      public Builder clearForwardMessageTest() {
        if (forwardMessageTestBuilder_ == null) {
          forwardMessageTest_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00200000);
          onChanged();
        } else {
          forwardMessageTestBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .TestMessage2 forward_message_test = 22;</code>
       */
      public Builder removeForwardMessageTest(int index) {
        if (forwardMessageTestBuilder_ == null) {
          ensureForwardMessageTestIsMutable();
          forwardMessageTest_.remove(index);
          onChanged();
        } else {
          forwardMessageTestBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .TestMessage2 forward_message_test = 22;</code>
       */
      public Test.TestMessage2.Builder getForwardMessageTestBuilder(
          int index) {
        return getForwardMessageTestFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .TestMessage2 forward_message_test = 22;</code>
       */
      public Test.TestMessage2OrBuilder getForwardMessageTestOrBuilder(
          int index) {
        if (forwardMessageTestBuilder_ == null) {
          return forwardMessageTest_.get(index);  } else {
          return forwardMessageTestBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .TestMessage2 forward_message_test = 22;</code>
       */
      public java.util.List<? extends Test.TestMessage2OrBuilder> 
           getForwardMessageTestOrBuilderList() {
        if (forwardMessageTestBuilder_ != null) {
          return forwardMessageTestBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(forwardMessageTest_);
        }
      }
      /**
       * <code>repeated .TestMessage2 forward_message_test = 22;</code>
       */
      public Test.TestMessage2.Builder addForwardMessageTestBuilder() {
        return getForwardMessageTestFieldBuilder().addBuilder(
            Test.TestMessage2.getDefaultInstance());
      }
      /**
       * <code>repeated .TestMessage2 forward_message_test = 22;</code>
       */
      public Test.TestMessage2.Builder addForwardMessageTestBuilder(
          int index) {
        return getForwardMessageTestFieldBuilder().addBuilder(
            index, Test.TestMessage2.getDefaultInstance());
      }
      /**
       * <code>repeated .TestMessage2 forward_message_test = 22;</code>
       */
      public java.util.List<Test.TestMessage2.Builder> 
           getForwardMessageTestBuilderList() {
        return getForwardMessageTestFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Test.TestMessage2, Test.TestMessage2.Builder, Test.TestMessage2OrBuilder> 
          getForwardMessageTestFieldBuilder() {
        if (forwardMessageTestBuilder_ == null) {
          forwardMessageTestBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Test.TestMessage2, Test.TestMessage2.Builder, Test.TestMessage2OrBuilder>(
                  forwardMessageTest_,
                  ((bitField0_ & 0x00200000) == 0x00200000),
                  getParentForChildren(),
                  isClean());
          forwardMessageTest_ = null;
        }
        return forwardMessageTestBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:TestMessage)
    }

    static {
      defaultInstance = new TestMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:TestMessage)
  }

  public interface TestMessage2OrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string string_test = 1;
    /**
     * <code>required string string_test = 1;</code>
     */
    boolean hasStringTest();
    /**
     * <code>required string string_test = 1;</code>
     */
    java.lang.String getStringTest();
    /**
     * <code>required string string_test = 1;</code>
     */
    com.google.protobuf.ByteString
        getStringTestBytes();

    // repeated .TestMessage nested_sibling_message_test = 2;
    /**
     * <code>repeated .TestMessage nested_sibling_message_test = 2;</code>
     */
    java.util.List<Test.TestMessage> 
        getNestedSiblingMessageTestList();
    /**
     * <code>repeated .TestMessage nested_sibling_message_test = 2;</code>
     */
    Test.TestMessage getNestedSiblingMessageTest(int index);
    /**
     * <code>repeated .TestMessage nested_sibling_message_test = 2;</code>
     */
    int getNestedSiblingMessageTestCount();
    /**
     * <code>repeated .TestMessage nested_sibling_message_test = 2;</code>
     */
    java.util.List<? extends Test.TestMessageOrBuilder> 
        getNestedSiblingMessageTestOrBuilderList();
    /**
     * <code>repeated .TestMessage nested_sibling_message_test = 2;</code>
     */
    Test.TestMessageOrBuilder getNestedSiblingMessageTestOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code TestMessage2}
   */
  public static final class TestMessage2 extends
      com.google.protobuf.GeneratedMessage
      implements TestMessage2OrBuilder {
    // Use TestMessage2.newBuilder() to construct.
    private TestMessage2(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TestMessage2(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TestMessage2 defaultInstance;
    public static TestMessage2 getDefaultInstance() {
      return defaultInstance;
    }

    public TestMessage2 getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TestMessage2(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              stringTest_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                nestedSiblingMessageTest_ = new java.util.ArrayList<Test.TestMessage>();
                mutable_bitField0_ |= 0x00000002;
              }
              nestedSiblingMessageTest_.add(input.readMessage(Test.TestMessage.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          nestedSiblingMessageTest_ = java.util.Collections.unmodifiableList(nestedSiblingMessageTest_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Test.internal_static_TestMessage2_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Test.internal_static_TestMessage2_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Test.TestMessage2.class, Test.TestMessage2.Builder.class);
    }

    public static com.google.protobuf.Parser<TestMessage2> PARSER =
        new com.google.protobuf.AbstractParser<TestMessage2>() {
      public TestMessage2 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TestMessage2(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TestMessage2> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string string_test = 1;
    public static final int STRING_TEST_FIELD_NUMBER = 1;
    private java.lang.Object stringTest_;
    /**
     * <code>required string string_test = 1;</code>
     */
    public boolean hasStringTest() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string string_test = 1;</code>
     */
    public java.lang.String getStringTest() {
      java.lang.Object ref = stringTest_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          stringTest_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string string_test = 1;</code>
     */
    public com.google.protobuf.ByteString
        getStringTestBytes() {
      java.lang.Object ref = stringTest_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stringTest_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .TestMessage nested_sibling_message_test = 2;
    public static final int NESTED_SIBLING_MESSAGE_TEST_FIELD_NUMBER = 2;
    private java.util.List<Test.TestMessage> nestedSiblingMessageTest_;
    /**
     * <code>repeated .TestMessage nested_sibling_message_test = 2;</code>
     */
    public java.util.List<Test.TestMessage> getNestedSiblingMessageTestList() {
      return nestedSiblingMessageTest_;
    }
    /**
     * <code>repeated .TestMessage nested_sibling_message_test = 2;</code>
     */
    public java.util.List<? extends Test.TestMessageOrBuilder> 
        getNestedSiblingMessageTestOrBuilderList() {
      return nestedSiblingMessageTest_;
    }
    /**
     * <code>repeated .TestMessage nested_sibling_message_test = 2;</code>
     */
    public int getNestedSiblingMessageTestCount() {
      return nestedSiblingMessageTest_.size();
    }
    /**
     * <code>repeated .TestMessage nested_sibling_message_test = 2;</code>
     */
    public Test.TestMessage getNestedSiblingMessageTest(int index) {
      return nestedSiblingMessageTest_.get(index);
    }
    /**
     * <code>repeated .TestMessage nested_sibling_message_test = 2;</code>
     */
    public Test.TestMessageOrBuilder getNestedSiblingMessageTestOrBuilder(
        int index) {
      return nestedSiblingMessageTest_.get(index);
    }

    private void initFields() {
      stringTest_ = "";
      nestedSiblingMessageTest_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasStringTest()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getNestedSiblingMessageTestCount(); i++) {
        if (!getNestedSiblingMessageTest(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getStringTestBytes());
      }
      for (int i = 0; i < nestedSiblingMessageTest_.size(); i++) {
        output.writeMessage(2, nestedSiblingMessageTest_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getStringTestBytes());
      }
      for (int i = 0; i < nestedSiblingMessageTest_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, nestedSiblingMessageTest_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Test.TestMessage2 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Test.TestMessage2 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Test.TestMessage2 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Test.TestMessage2 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Test.TestMessage2 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Test.TestMessage2 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Test.TestMessage2 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Test.TestMessage2 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Test.TestMessage2 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Test.TestMessage2 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Test.TestMessage2 prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TestMessage2}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Test.TestMessage2OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Test.internal_static_TestMessage2_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Test.internal_static_TestMessage2_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Test.TestMessage2.class, Test.TestMessage2.Builder.class);
      }

      // Construct using Test.TestMessage2.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getNestedSiblingMessageTestFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        stringTest_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (nestedSiblingMessageTestBuilder_ == null) {
          nestedSiblingMessageTest_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          nestedSiblingMessageTestBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Test.internal_static_TestMessage2_descriptor;
      }

      public Test.TestMessage2 getDefaultInstanceForType() {
        return Test.TestMessage2.getDefaultInstance();
      }

      public Test.TestMessage2 build() {
        Test.TestMessage2 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Test.TestMessage2 buildPartial() {
        Test.TestMessage2 result = new Test.TestMessage2(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.stringTest_ = stringTest_;
        if (nestedSiblingMessageTestBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            nestedSiblingMessageTest_ = java.util.Collections.unmodifiableList(nestedSiblingMessageTest_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.nestedSiblingMessageTest_ = nestedSiblingMessageTest_;
        } else {
          result.nestedSiblingMessageTest_ = nestedSiblingMessageTestBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Test.TestMessage2) {
          return mergeFrom((Test.TestMessage2)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Test.TestMessage2 other) {
        if (other == Test.TestMessage2.getDefaultInstance()) return this;
        if (other.hasStringTest()) {
          bitField0_ |= 0x00000001;
          stringTest_ = other.stringTest_;
          onChanged();
        }
        if (nestedSiblingMessageTestBuilder_ == null) {
          if (!other.nestedSiblingMessageTest_.isEmpty()) {
            if (nestedSiblingMessageTest_.isEmpty()) {
              nestedSiblingMessageTest_ = other.nestedSiblingMessageTest_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureNestedSiblingMessageTestIsMutable();
              nestedSiblingMessageTest_.addAll(other.nestedSiblingMessageTest_);
            }
            onChanged();
          }
        } else {
          if (!other.nestedSiblingMessageTest_.isEmpty()) {
            if (nestedSiblingMessageTestBuilder_.isEmpty()) {
              nestedSiblingMessageTestBuilder_.dispose();
              nestedSiblingMessageTestBuilder_ = null;
              nestedSiblingMessageTest_ = other.nestedSiblingMessageTest_;
              bitField0_ = (bitField0_ & ~0x00000002);
              nestedSiblingMessageTestBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getNestedSiblingMessageTestFieldBuilder() : null;
            } else {
              nestedSiblingMessageTestBuilder_.addAllMessages(other.nestedSiblingMessageTest_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasStringTest()) {
          
          return false;
        }
        for (int i = 0; i < getNestedSiblingMessageTestCount(); i++) {
          if (!getNestedSiblingMessageTest(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Test.TestMessage2 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Test.TestMessage2) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string string_test = 1;
      private java.lang.Object stringTest_ = "";
      /**
       * <code>required string string_test = 1;</code>
       */
      public boolean hasStringTest() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string string_test = 1;</code>
       */
      public java.lang.String getStringTest() {
        java.lang.Object ref = stringTest_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          stringTest_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string string_test = 1;</code>
       */
      public com.google.protobuf.ByteString
          getStringTestBytes() {
        java.lang.Object ref = stringTest_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stringTest_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string string_test = 1;</code>
       */
      public Builder setStringTest(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        stringTest_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string string_test = 1;</code>
       */
      public Builder clearStringTest() {
        bitField0_ = (bitField0_ & ~0x00000001);
        stringTest_ = getDefaultInstance().getStringTest();
        onChanged();
        return this;
      }
      /**
       * <code>required string string_test = 1;</code>
       */
      public Builder setStringTestBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        stringTest_ = value;
        onChanged();
        return this;
      }

      // repeated .TestMessage nested_sibling_message_test = 2;
      private java.util.List<Test.TestMessage> nestedSiblingMessageTest_ =
        java.util.Collections.emptyList();
      private void ensureNestedSiblingMessageTestIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          nestedSiblingMessageTest_ = new java.util.ArrayList<Test.TestMessage>(nestedSiblingMessageTest_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          Test.TestMessage, Test.TestMessage.Builder, Test.TestMessageOrBuilder> nestedSiblingMessageTestBuilder_;

      /**
       * <code>repeated .TestMessage nested_sibling_message_test = 2;</code>
       */
      public java.util.List<Test.TestMessage> getNestedSiblingMessageTestList() {
        if (nestedSiblingMessageTestBuilder_ == null) {
          return java.util.Collections.unmodifiableList(nestedSiblingMessageTest_);
        } else {
          return nestedSiblingMessageTestBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .TestMessage nested_sibling_message_test = 2;</code>
       */
      public int getNestedSiblingMessageTestCount() {
        if (nestedSiblingMessageTestBuilder_ == null) {
          return nestedSiblingMessageTest_.size();
        } else {
          return nestedSiblingMessageTestBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .TestMessage nested_sibling_message_test = 2;</code>
       */
      public Test.TestMessage getNestedSiblingMessageTest(int index) {
        if (nestedSiblingMessageTestBuilder_ == null) {
          return nestedSiblingMessageTest_.get(index);
        } else {
          return nestedSiblingMessageTestBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .TestMessage nested_sibling_message_test = 2;</code>
       */
      public Builder setNestedSiblingMessageTest(
          int index, Test.TestMessage value) {
        if (nestedSiblingMessageTestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNestedSiblingMessageTestIsMutable();
          nestedSiblingMessageTest_.set(index, value);
          onChanged();
        } else {
          nestedSiblingMessageTestBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TestMessage nested_sibling_message_test = 2;</code>
       */
      public Builder setNestedSiblingMessageTest(
          int index, Test.TestMessage.Builder builderForValue) {
        if (nestedSiblingMessageTestBuilder_ == null) {
          ensureNestedSiblingMessageTestIsMutable();
          nestedSiblingMessageTest_.set(index, builderForValue.build());
          onChanged();
        } else {
          nestedSiblingMessageTestBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TestMessage nested_sibling_message_test = 2;</code>
       */
      public Builder addNestedSiblingMessageTest(Test.TestMessage value) {
        if (nestedSiblingMessageTestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNestedSiblingMessageTestIsMutable();
          nestedSiblingMessageTest_.add(value);
          onChanged();
        } else {
          nestedSiblingMessageTestBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .TestMessage nested_sibling_message_test = 2;</code>
       */
      public Builder addNestedSiblingMessageTest(
          int index, Test.TestMessage value) {
        if (nestedSiblingMessageTestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNestedSiblingMessageTestIsMutable();
          nestedSiblingMessageTest_.add(index, value);
          onChanged();
        } else {
          nestedSiblingMessageTestBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TestMessage nested_sibling_message_test = 2;</code>
       */
      public Builder addNestedSiblingMessageTest(
          Test.TestMessage.Builder builderForValue) {
        if (nestedSiblingMessageTestBuilder_ == null) {
          ensureNestedSiblingMessageTestIsMutable();
          nestedSiblingMessageTest_.add(builderForValue.build());
          onChanged();
        } else {
          nestedSiblingMessageTestBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TestMessage nested_sibling_message_test = 2;</code>
       */
      public Builder addNestedSiblingMessageTest(
          int index, Test.TestMessage.Builder builderForValue) {
        if (nestedSiblingMessageTestBuilder_ == null) {
          ensureNestedSiblingMessageTestIsMutable();
          nestedSiblingMessageTest_.add(index, builderForValue.build());
          onChanged();
        } else {
          nestedSiblingMessageTestBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TestMessage nested_sibling_message_test = 2;</code>
       */
      public Builder addAllNestedSiblingMessageTest(
          java.lang.Iterable<? extends Test.TestMessage> values) {
        if (nestedSiblingMessageTestBuilder_ == null) {
          ensureNestedSiblingMessageTestIsMutable();
          super.addAll(values, nestedSiblingMessageTest_);
          onChanged();
        } else {
          nestedSiblingMessageTestBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .TestMessage nested_sibling_message_test = 2;</code>
       */
      public Builder clearNestedSiblingMessageTest() {
        if (nestedSiblingMessageTestBuilder_ == null) {
          nestedSiblingMessageTest_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          nestedSiblingMessageTestBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .TestMessage nested_sibling_message_test = 2;</code>
       */
      public Builder removeNestedSiblingMessageTest(int index) {
        if (nestedSiblingMessageTestBuilder_ == null) {
          ensureNestedSiblingMessageTestIsMutable();
          nestedSiblingMessageTest_.remove(index);
          onChanged();
        } else {
          nestedSiblingMessageTestBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .TestMessage nested_sibling_message_test = 2;</code>
       */
      public Test.TestMessage.Builder getNestedSiblingMessageTestBuilder(
          int index) {
        return getNestedSiblingMessageTestFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .TestMessage nested_sibling_message_test = 2;</code>
       */
      public Test.TestMessageOrBuilder getNestedSiblingMessageTestOrBuilder(
          int index) {
        if (nestedSiblingMessageTestBuilder_ == null) {
          return nestedSiblingMessageTest_.get(index);  } else {
          return nestedSiblingMessageTestBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .TestMessage nested_sibling_message_test = 2;</code>
       */
      public java.util.List<? extends Test.TestMessageOrBuilder> 
           getNestedSiblingMessageTestOrBuilderList() {
        if (nestedSiblingMessageTestBuilder_ != null) {
          return nestedSiblingMessageTestBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(nestedSiblingMessageTest_);
        }
      }
      /**
       * <code>repeated .TestMessage nested_sibling_message_test = 2;</code>
       */
      public Test.TestMessage.Builder addNestedSiblingMessageTestBuilder() {
        return getNestedSiblingMessageTestFieldBuilder().addBuilder(
            Test.TestMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .TestMessage nested_sibling_message_test = 2;</code>
       */
      public Test.TestMessage.Builder addNestedSiblingMessageTestBuilder(
          int index) {
        return getNestedSiblingMessageTestFieldBuilder().addBuilder(
            index, Test.TestMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .TestMessage nested_sibling_message_test = 2;</code>
       */
      public java.util.List<Test.TestMessage.Builder> 
           getNestedSiblingMessageTestBuilderList() {
        return getNestedSiblingMessageTestFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Test.TestMessage, Test.TestMessage.Builder, Test.TestMessageOrBuilder> 
          getNestedSiblingMessageTestFieldBuilder() {
        if (nestedSiblingMessageTestBuilder_ == null) {
          nestedSiblingMessageTestBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Test.TestMessage, Test.TestMessage.Builder, Test.TestMessageOrBuilder>(
                  nestedSiblingMessageTest_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          nestedSiblingMessageTest_ = null;
        }
        return nestedSiblingMessageTestBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:TestMessage2)
    }

    static {
      defaultInstance = new TestMessage2(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:TestMessage2)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TestMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TestMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TestMessage_NestedTestMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TestMessage_NestedTestMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TestMessage_NestedTestMessage2_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TestMessage_NestedTestMessage2_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TestMessage2_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TestMessage2_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\030autowrap/test/test.proto\"\215\006\n\013TestMessa" +
      "ge\022\023\n\013string_test\030\001 \002(\t\022\022\n\nbytes_test\030\002 " +
      "\002(\014\022\025\n\nint32_test\030\003 \002(\005:\0011\022\022\n\nint64_test" +
      "\030\004 \002(\003\022\023\n\013uint32_test\030\005 \002(\r\022\023\n\013uint64_te" +
      "st\030\006 \002(\004\022\023\n\013sint32_test\030\007 \002(\021\022\023\n\013sint64_" +
      "test\030\010 \002(\022\022\024\n\014fixed32_test\030\t \002(\007\022\024\n\014fixe" +
      "d64_test\030\n \002(\006\022\025\n\rsfixed32_test\030\013 \002(\017\022\025\n" +
      "\rsfixed64_test\030\014 \002(\020\022\022\n\nfloat_test\030\r \002(\002" +
      "\022\023\n\013double_test\030\016 \002(\001\022\021\n\tbool_test\030\017 \002(\010" +
      "\022(\n\tenum_test\030\020 \002(\0162\025.TestMessage.TestEn",
      "um\022;\n\023nested_message_test\030\021 \002(\0132\036.TestMe" +
      "ssage.NestedTestMessage\022D\n\034repeated_nest" +
      "ed_message_test\030\022 \003(\0132\036.TestMessage.Nest" +
      "edTestMessage\022\033\n\023repeated_int32_test\030\023 \003" +
      "(\005\022\034\n\024repeated_string_test\030\024 \003(\t\022\027\n\017came" +
      "lCaseString\030\025 \002(\t\022+\n\024forward_message_tes" +
      "t\030\026 \003(\0132\r.TestMessage2\032(\n\021NestedTestMess" +
      "age\022\023\n\013string_test\030\001 \002(\t\032)\n\022NestedTestMe" +
      "ssage2\022\023\n\013string_test\030\001 \002(\t\"=\n\010TestEnum\022" +
      "\017\n\013TEST_ENUM_0\020\000\022\017\n\013TEST_ENUM_1\020\001\022\017\n\013TES",
      "T_ENUM_2\020\002\"V\n\014TestMessage2\022\023\n\013string_tes" +
      "t\030\001 \002(\t\0221\n\033nested_sibling_message_test\030\002" +
      " \003(\0132\014.TestMessage"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_TestMessage_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_TestMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TestMessage_descriptor,
              new java.lang.String[] { "StringTest", "BytesTest", "Int32Test", "Int64Test", "Uint32Test", "Uint64Test", "Sint32Test", "Sint64Test", "Fixed32Test", "Fixed64Test", "Sfixed32Test", "Sfixed64Test", "FloatTest", "DoubleTest", "BoolTest", "EnumTest", "NestedMessageTest", "RepeatedNestedMessageTest", "RepeatedInt32Test", "RepeatedStringTest", "CamelCaseString", "ForwardMessageTest", });
          internal_static_TestMessage_NestedTestMessage_descriptor =
            internal_static_TestMessage_descriptor.getNestedTypes().get(0);
          internal_static_TestMessage_NestedTestMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TestMessage_NestedTestMessage_descriptor,
              new java.lang.String[] { "StringTest", });
          internal_static_TestMessage_NestedTestMessage2_descriptor =
            internal_static_TestMessage_descriptor.getNestedTypes().get(1);
          internal_static_TestMessage_NestedTestMessage2_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TestMessage_NestedTestMessage2_descriptor,
              new java.lang.String[] { "StringTest", });
          internal_static_TestMessage2_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_TestMessage2_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TestMessage2_descriptor,
              new java.lang.String[] { "StringTest", "NestedSiblingMessageTest", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
