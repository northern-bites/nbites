// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ParticleSwarm.proto

package messages;

/**
 * Protobuf type {@code messages.ParticleSwarm}
 */
public final class ParticleSwarm extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:messages.ParticleSwarm)
    ParticleSwarmOrBuilder {
  // Use ParticleSwarm.newBuilder() to construct.
  private ParticleSwarm(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
    this.unknownFields = builder.getUnknownFields();
  }
  private ParticleSwarm(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

  private static final ParticleSwarm defaultInstance;
  public static ParticleSwarm getDefaultInstance() {
    return defaultInstance;
  }

  public ParticleSwarm getDefaultInstanceForType() {
    return defaultInstance;
  }

  private final com.google.protobuf.UnknownFieldSet unknownFields;
  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
    return this.unknownFields;
  }
  private ParticleSwarm(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    initFields();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              particle_ = new java.util.ArrayList<messages.Particle>();
              mutable_bitField0_ |= 0x00000001;
            }
            particle_.add(input.readMessage(messages.Particle.PARSER, extensionRegistry));
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e.getMessage()).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        particle_ = java.util.Collections.unmodifiableList(particle_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return messages._File_ParticleSwarm.internal_static_messages_ParticleSwarm_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return messages._File_ParticleSwarm.internal_static_messages_ParticleSwarm_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            messages.ParticleSwarm.class, messages.ParticleSwarm.Builder.class);
  }

  public static com.google.protobuf.Parser<ParticleSwarm> PARSER =
      new com.google.protobuf.AbstractParser<ParticleSwarm>() {
    public ParticleSwarm parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ParticleSwarm(input, extensionRegistry);
    }
  };

  @java.lang.Override
  public com.google.protobuf.Parser<ParticleSwarm> getParserForType() {
    return PARSER;
  }

  public static final int PARTICLE_FIELD_NUMBER = 1;
  private java.util.List<messages.Particle> particle_;
  /**
   * <code>repeated .messages.Particle particle = 1;</code>
   */
  public java.util.List<messages.Particle> getParticleList() {
    return particle_;
  }
  /**
   * <code>repeated .messages.Particle particle = 1;</code>
   */
  public java.util.List<? extends messages.ParticleOrBuilder> 
      getParticleOrBuilderList() {
    return particle_;
  }
  /**
   * <code>repeated .messages.Particle particle = 1;</code>
   */
  public int getParticleCount() {
    return particle_.size();
  }
  /**
   * <code>repeated .messages.Particle particle = 1;</code>
   */
  public messages.Particle getParticle(int index) {
    return particle_.get(index);
  }
  /**
   * <code>repeated .messages.Particle particle = 1;</code>
   */
  public messages.ParticleOrBuilder getParticleOrBuilder(
      int index) {
    return particle_.get(index);
  }

  private void initFields() {
    particle_ = java.util.Collections.emptyList();
  }
  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    for (int i = 0; i < particle_.size(); i++) {
      output.writeMessage(1, particle_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  private int memoizedSerializedSize = -1;
  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < particle_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, particle_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  protected java.lang.Object writeReplace()
      throws java.io.ObjectStreamException {
    return super.writeReplace();
  }

  public static messages.ParticleSwarm parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static messages.ParticleSwarm parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static messages.ParticleSwarm parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static messages.ParticleSwarm parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static messages.ParticleSwarm parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static messages.ParticleSwarm parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static messages.ParticleSwarm parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static messages.ParticleSwarm parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static messages.ParticleSwarm parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static messages.ParticleSwarm parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public static Builder newBuilder() { return Builder.create(); }
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder(messages.ParticleSwarm prototype) {
    return newBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() { return newBuilder(this); }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code messages.ParticleSwarm}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:messages.ParticleSwarm)
      messages.ParticleSwarmOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return messages._File_ParticleSwarm.internal_static_messages_ParticleSwarm_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return messages._File_ParticleSwarm.internal_static_messages_ParticleSwarm_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              messages.ParticleSwarm.class, messages.ParticleSwarm.Builder.class);
    }

    // Construct using messages.ParticleSwarm.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        getParticleFieldBuilder();
      }
    }
    private static Builder create() {
      return new Builder();
    }

    public Builder clear() {
      super.clear();
      if (particleBuilder_ == null) {
        particle_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        particleBuilder_.clear();
      }
      return this;
    }

    public Builder clone() {
      return create().mergeFrom(buildPartial());
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return messages._File_ParticleSwarm.internal_static_messages_ParticleSwarm_descriptor;
    }

    public messages.ParticleSwarm getDefaultInstanceForType() {
      return messages.ParticleSwarm.getDefaultInstance();
    }

    public messages.ParticleSwarm build() {
      messages.ParticleSwarm result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public messages.ParticleSwarm buildPartial() {
      messages.ParticleSwarm result = new messages.ParticleSwarm(this);
      int from_bitField0_ = bitField0_;
      if (particleBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          particle_ = java.util.Collections.unmodifiableList(particle_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.particle_ = particle_;
      } else {
        result.particle_ = particleBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof messages.ParticleSwarm) {
        return mergeFrom((messages.ParticleSwarm)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(messages.ParticleSwarm other) {
      if (other == messages.ParticleSwarm.getDefaultInstance()) return this;
      if (particleBuilder_ == null) {
        if (!other.particle_.isEmpty()) {
          if (particle_.isEmpty()) {
            particle_ = other.particle_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureParticleIsMutable();
            particle_.addAll(other.particle_);
          }
          onChanged();
        }
      } else {
        if (!other.particle_.isEmpty()) {
          if (particleBuilder_.isEmpty()) {
            particleBuilder_.dispose();
            particleBuilder_ = null;
            particle_ = other.particle_;
            bitField0_ = (bitField0_ & ~0x00000001);
            particleBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getParticleFieldBuilder() : null;
          } else {
            particleBuilder_.addAllMessages(other.particle_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      messages.ParticleSwarm parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (messages.ParticleSwarm) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<messages.Particle> particle_ =
      java.util.Collections.emptyList();
    private void ensureParticleIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        particle_ = new java.util.ArrayList<messages.Particle>(particle_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        messages.Particle, messages.Particle.Builder, messages.ParticleOrBuilder> particleBuilder_;

    /**
     * <code>repeated .messages.Particle particle = 1;</code>
     */
    public java.util.List<messages.Particle> getParticleList() {
      if (particleBuilder_ == null) {
        return java.util.Collections.unmodifiableList(particle_);
      } else {
        return particleBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .messages.Particle particle = 1;</code>
     */
    public int getParticleCount() {
      if (particleBuilder_ == null) {
        return particle_.size();
      } else {
        return particleBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .messages.Particle particle = 1;</code>
     */
    public messages.Particle getParticle(int index) {
      if (particleBuilder_ == null) {
        return particle_.get(index);
      } else {
        return particleBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .messages.Particle particle = 1;</code>
     */
    public Builder setParticle(
        int index, messages.Particle value) {
      if (particleBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureParticleIsMutable();
        particle_.set(index, value);
        onChanged();
      } else {
        particleBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .messages.Particle particle = 1;</code>
     */
    public Builder setParticle(
        int index, messages.Particle.Builder builderForValue) {
      if (particleBuilder_ == null) {
        ensureParticleIsMutable();
        particle_.set(index, builderForValue.build());
        onChanged();
      } else {
        particleBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .messages.Particle particle = 1;</code>
     */
    public Builder addParticle(messages.Particle value) {
      if (particleBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureParticleIsMutable();
        particle_.add(value);
        onChanged();
      } else {
        particleBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .messages.Particle particle = 1;</code>
     */
    public Builder addParticle(
        int index, messages.Particle value) {
      if (particleBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureParticleIsMutable();
        particle_.add(index, value);
        onChanged();
      } else {
        particleBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .messages.Particle particle = 1;</code>
     */
    public Builder addParticle(
        messages.Particle.Builder builderForValue) {
      if (particleBuilder_ == null) {
        ensureParticleIsMutable();
        particle_.add(builderForValue.build());
        onChanged();
      } else {
        particleBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .messages.Particle particle = 1;</code>
     */
    public Builder addParticle(
        int index, messages.Particle.Builder builderForValue) {
      if (particleBuilder_ == null) {
        ensureParticleIsMutable();
        particle_.add(index, builderForValue.build());
        onChanged();
      } else {
        particleBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .messages.Particle particle = 1;</code>
     */
    public Builder addAllParticle(
        java.lang.Iterable<? extends messages.Particle> values) {
      if (particleBuilder_ == null) {
        ensureParticleIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, particle_);
        onChanged();
      } else {
        particleBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .messages.Particle particle = 1;</code>
     */
    public Builder clearParticle() {
      if (particleBuilder_ == null) {
        particle_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        particleBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .messages.Particle particle = 1;</code>
     */
    public Builder removeParticle(int index) {
      if (particleBuilder_ == null) {
        ensureParticleIsMutable();
        particle_.remove(index);
        onChanged();
      } else {
        particleBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .messages.Particle particle = 1;</code>
     */
    public messages.Particle.Builder getParticleBuilder(
        int index) {
      return getParticleFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .messages.Particle particle = 1;</code>
     */
    public messages.ParticleOrBuilder getParticleOrBuilder(
        int index) {
      if (particleBuilder_ == null) {
        return particle_.get(index);  } else {
        return particleBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .messages.Particle particle = 1;</code>
     */
    public java.util.List<? extends messages.ParticleOrBuilder> 
         getParticleOrBuilderList() {
      if (particleBuilder_ != null) {
        return particleBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(particle_);
      }
    }
    /**
     * <code>repeated .messages.Particle particle = 1;</code>
     */
    public messages.Particle.Builder addParticleBuilder() {
      return getParticleFieldBuilder().addBuilder(
          messages.Particle.getDefaultInstance());
    }
    /**
     * <code>repeated .messages.Particle particle = 1;</code>
     */
    public messages.Particle.Builder addParticleBuilder(
        int index) {
      return getParticleFieldBuilder().addBuilder(
          index, messages.Particle.getDefaultInstance());
    }
    /**
     * <code>repeated .messages.Particle particle = 1;</code>
     */
    public java.util.List<messages.Particle.Builder> 
         getParticleBuilderList() {
      return getParticleFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        messages.Particle, messages.Particle.Builder, messages.ParticleOrBuilder> 
        getParticleFieldBuilder() {
      if (particleBuilder_ == null) {
        particleBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            messages.Particle, messages.Particle.Builder, messages.ParticleOrBuilder>(
                particle_,
                ((bitField0_ & 0x00000001) == 0x00000001),
                getParentForChildren(),
                isClean());
        particle_ = null;
      }
      return particleBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:messages.ParticleSwarm)
  }

  static {
    defaultInstance = new ParticleSwarm(true);
    defaultInstance.initFields();
  }

  // @@protoc_insertion_point(class_scope:messages.ParticleSwarm)
}

