// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: VisionRobot.proto

package messages;

public interface VisionObstacleOrBuilder
    extends com.google.protobuf.MessageOrBuilder {

  // optional bool on_left = 1;
  /**
   * <code>optional bool on_left = 1;</code>
   */
  boolean hasOnLeft();
  /**
   * <code>optional bool on_left = 1;</code>
   */
  boolean getOnLeft();

  // optional bool on_right = 2;
  /**
   * <code>optional bool on_right = 2;</code>
   */
  boolean hasOnRight();
  /**
   * <code>optional bool on_right = 2;</code>
   */
  boolean getOnRight();

  // optional bool off_field = 3;
  /**
   * <code>optional bool off_field = 3;</code>
   */
  boolean hasOffField();
  /**
   * <code>optional bool off_field = 3;</code>
   */
  boolean getOffField();

  // optional sint32 block_left = 4;
  /**
   * <code>optional sint32 block_left = 4;</code>
   */
  boolean hasBlockLeft();
  /**
   * <code>optional sint32 block_left = 4;</code>
   */
  int getBlockLeft();

  // optional sint32 block_mid = 5;
  /**
   * <code>optional sint32 block_mid = 5;</code>
   */
  boolean hasBlockMid();
  /**
   * <code>optional sint32 block_mid = 5;</code>
   */
  int getBlockMid();

  // optional sint32 block_right = 6;
  /**
   * <code>optional sint32 block_right = 6;</code>
   */
  boolean hasBlockRight();
  /**
   * <code>optional sint32 block_right = 6;</code>
   */
  int getBlockRight();

  // optional float left_dist = 7;
  /**
   * <code>optional float left_dist = 7;</code>
   */
  boolean hasLeftDist();
  /**
   * <code>optional float left_dist = 7;</code>
   */
  float getLeftDist();

  // optional float mid_dist = 8;
  /**
   * <code>optional float mid_dist = 8;</code>
   */
  boolean hasMidDist();
  /**
   * <code>optional float mid_dist = 8;</code>
   */
  float getMidDist();

  // optional float right_dist = 9;
  /**
   * <code>optional float right_dist = 9;</code>
   */
  boolean hasRightDist();
  /**
   * <code>optional float right_dist = 9;</code>
   */
  float getRightDist();

  // optional float left_bearing = 10;
  /**
   * <code>optional float left_bearing = 10;</code>
   */
  boolean hasLeftBearing();
  /**
   * <code>optional float left_bearing = 10;</code>
   */
  float getLeftBearing();

  // optional float mid_bearing = 11;
  /**
   * <code>optional float mid_bearing = 11;</code>
   */
  boolean hasMidBearing();
  /**
   * <code>optional float mid_bearing = 11;</code>
   */
  float getMidBearing();

  // optional float right_bearing = 12;
  /**
   * <code>optional float right_bearing = 12;</code>
   */
  boolean hasRightBearing();
  /**
   * <code>optional float right_bearing = 12;</code>
   */
  float getRightBearing();
}
