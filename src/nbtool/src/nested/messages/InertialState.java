// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: InertialState.proto

package messages;

/**
 * Protobuf type {@code messages.InertialState}
 */
public final class InertialState extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:messages.InertialState)
    InertialStateOrBuilder {
  // Use InertialState.newBuilder() to construct.
  private InertialState(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
    this.unknownFields = builder.getUnknownFields();
  }
  private InertialState(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

  private static final InertialState defaultInstance;
  public static InertialState getDefaultInstance() {
    return defaultInstance;
  }

  public InertialState getDefaultInstanceForType() {
    return defaultInstance;
  }

  private final com.google.protobuf.UnknownFieldSet unknownFields;
  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
    return this.unknownFields;
  }
  private InertialState(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    initFields();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 13: {
            bitField0_ |= 0x00000001;
            accX_ = input.readFloat();
            break;
          }
          case 21: {
            bitField0_ |= 0x00000002;
            accY_ = input.readFloat();
            break;
          }
          case 29: {
            bitField0_ |= 0x00000004;
            accZ_ = input.readFloat();
            break;
          }
          case 37: {
            bitField0_ |= 0x00000008;
            gyrX_ = input.readFloat();
            break;
          }
          case 45: {
            bitField0_ |= 0x00000010;
            gyrY_ = input.readFloat();
            break;
          }
          case 53: {
            bitField0_ |= 0x00000020;
            gyrZ_ = input.readFloat();
            break;
          }
          case 61: {
            bitField0_ |= 0x00000040;
            angleX_ = input.readFloat();
            break;
          }
          case 69: {
            bitField0_ |= 0x00000080;
            angleY_ = input.readFloat();
            break;
          }
          case 77: {
            bitField0_ |= 0x00000100;
            angleZ_ = input.readFloat();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e.getMessage()).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return messages._File_InertialState.internal_static_messages_InertialState_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return messages._File_InertialState.internal_static_messages_InertialState_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            messages.InertialState.class, messages.InertialState.Builder.class);
  }

  public static com.google.protobuf.Parser<InertialState> PARSER =
      new com.google.protobuf.AbstractParser<InertialState>() {
    public InertialState parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new InertialState(input, extensionRegistry);
    }
  };

  @java.lang.Override
  public com.google.protobuf.Parser<InertialState> getParserForType() {
    return PARSER;
  }

  private int bitField0_;
  public static final int ACC_X_FIELD_NUMBER = 1;
  private float accX_;
  /**
   * <code>optional float acc_x = 1;</code>
   *
   * <pre>
   * Raw accelerometer data.
   * </pre>
   */
  public boolean hasAccX() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>optional float acc_x = 1;</code>
   *
   * <pre>
   * Raw accelerometer data.
   * </pre>
   */
  public float getAccX() {
    return accX_;
  }

  public static final int ACC_Y_FIELD_NUMBER = 2;
  private float accY_;
  /**
   * <code>optional float acc_y = 2;</code>
   */
  public boolean hasAccY() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>optional float acc_y = 2;</code>
   */
  public float getAccY() {
    return accY_;
  }

  public static final int ACC_Z_FIELD_NUMBER = 3;
  private float accZ_;
  /**
   * <code>optional float acc_z = 3;</code>
   */
  public boolean hasAccZ() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <code>optional float acc_z = 3;</code>
   */
  public float getAccZ() {
    return accZ_;
  }

  public static final int GYR_X_FIELD_NUMBER = 4;
  private float gyrX_;
  /**
   * <code>optional float gyr_x = 4;</code>
   *
   * <pre>
   * Raw gyrometer data.
   * </pre>
   */
  public boolean hasGyrX() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <code>optional float gyr_x = 4;</code>
   *
   * <pre>
   * Raw gyrometer data.
   * </pre>
   */
  public float getGyrX() {
    return gyrX_;
  }

  public static final int GYR_Y_FIELD_NUMBER = 5;
  private float gyrY_;
  /**
   * <code>optional float gyr_y = 5;</code>
   */
  public boolean hasGyrY() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <code>optional float gyr_y = 5;</code>
   */
  public float getGyrY() {
    return gyrY_;
  }

  public static final int GYR_Z_FIELD_NUMBER = 6;
  private float gyrZ_;
  /**
   * <code>optional float gyr_z = 6;</code>
   */
  public boolean hasGyrZ() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <code>optional float gyr_z = 6;</code>
   */
  public float getGyrZ() {
    return gyrZ_;
  }

  public static final int ANGLE_X_FIELD_NUMBER = 7;
  private float angleX_;
  /**
   * <code>optional float angle_x = 7;</code>
   *
   * <pre>
   * Filtered angle data.
   * </pre>
   */
  public boolean hasAngleX() {
    return ((bitField0_ & 0x00000040) == 0x00000040);
  }
  /**
   * <code>optional float angle_x = 7;</code>
   *
   * <pre>
   * Filtered angle data.
   * </pre>
   */
  public float getAngleX() {
    return angleX_;
  }

  public static final int ANGLE_Y_FIELD_NUMBER = 8;
  private float angleY_;
  /**
   * <code>optional float angle_y = 8;</code>
   */
  public boolean hasAngleY() {
    return ((bitField0_ & 0x00000080) == 0x00000080);
  }
  /**
   * <code>optional float angle_y = 8;</code>
   */
  public float getAngleY() {
    return angleY_;
  }

  public static final int ANGLE_Z_FIELD_NUMBER = 9;
  private float angleZ_;
  /**
   * <code>optional float angle_z = 9;</code>
   */
  public boolean hasAngleZ() {
    return ((bitField0_ & 0x00000100) == 0x00000100);
  }
  /**
   * <code>optional float angle_z = 9;</code>
   */
  public float getAngleZ() {
    return angleZ_;
  }

  private void initFields() {
    accX_ = 0F;
    accY_ = 0F;
    accZ_ = 0F;
    gyrX_ = 0F;
    gyrY_ = 0F;
    gyrZ_ = 0F;
    angleX_ = 0F;
    angleY_ = 0F;
    angleZ_ = 0F;
  }
  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeFloat(1, accX_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeFloat(2, accY_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeFloat(3, accZ_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeFloat(4, gyrX_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeFloat(5, gyrY_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeFloat(6, gyrZ_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      output.writeFloat(7, angleX_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      output.writeFloat(8, angleY_);
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      output.writeFloat(9, angleZ_);
    }
    getUnknownFields().writeTo(output);
  }

  private int memoizedSerializedSize = -1;
  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(1, accX_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(2, accY_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(3, accZ_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(4, gyrX_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(5, gyrY_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(6, gyrZ_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(7, angleX_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(8, angleY_);
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(9, angleZ_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  protected java.lang.Object writeReplace()
      throws java.io.ObjectStreamException {
    return super.writeReplace();
  }

  public static messages.InertialState parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static messages.InertialState parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static messages.InertialState parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static messages.InertialState parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static messages.InertialState parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static messages.InertialState parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static messages.InertialState parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static messages.InertialState parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static messages.InertialState parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static messages.InertialState parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public static Builder newBuilder() { return Builder.create(); }
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder(messages.InertialState prototype) {
    return newBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() { return newBuilder(this); }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code messages.InertialState}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:messages.InertialState)
      messages.InertialStateOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return messages._File_InertialState.internal_static_messages_InertialState_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return messages._File_InertialState.internal_static_messages_InertialState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              messages.InertialState.class, messages.InertialState.Builder.class);
    }

    // Construct using messages.InertialState.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    private static Builder create() {
      return new Builder();
    }

    public Builder clear() {
      super.clear();
      accX_ = 0F;
      bitField0_ = (bitField0_ & ~0x00000001);
      accY_ = 0F;
      bitField0_ = (bitField0_ & ~0x00000002);
      accZ_ = 0F;
      bitField0_ = (bitField0_ & ~0x00000004);
      gyrX_ = 0F;
      bitField0_ = (bitField0_ & ~0x00000008);
      gyrY_ = 0F;
      bitField0_ = (bitField0_ & ~0x00000010);
      gyrZ_ = 0F;
      bitField0_ = (bitField0_ & ~0x00000020);
      angleX_ = 0F;
      bitField0_ = (bitField0_ & ~0x00000040);
      angleY_ = 0F;
      bitField0_ = (bitField0_ & ~0x00000080);
      angleZ_ = 0F;
      bitField0_ = (bitField0_ & ~0x00000100);
      return this;
    }

    public Builder clone() {
      return create().mergeFrom(buildPartial());
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return messages._File_InertialState.internal_static_messages_InertialState_descriptor;
    }

    public messages.InertialState getDefaultInstanceForType() {
      return messages.InertialState.getDefaultInstance();
    }

    public messages.InertialState build() {
      messages.InertialState result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public messages.InertialState buildPartial() {
      messages.InertialState result = new messages.InertialState(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.accX_ = accX_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.accY_ = accY_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.accZ_ = accZ_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000008;
      }
      result.gyrX_ = gyrX_;
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000010;
      }
      result.gyrY_ = gyrY_;
      if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
        to_bitField0_ |= 0x00000020;
      }
      result.gyrZ_ = gyrZ_;
      if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
        to_bitField0_ |= 0x00000040;
      }
      result.angleX_ = angleX_;
      if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
        to_bitField0_ |= 0x00000080;
      }
      result.angleY_ = angleY_;
      if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
        to_bitField0_ |= 0x00000100;
      }
      result.angleZ_ = angleZ_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof messages.InertialState) {
        return mergeFrom((messages.InertialState)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(messages.InertialState other) {
      if (other == messages.InertialState.getDefaultInstance()) return this;
      if (other.hasAccX()) {
        setAccX(other.getAccX());
      }
      if (other.hasAccY()) {
        setAccY(other.getAccY());
      }
      if (other.hasAccZ()) {
        setAccZ(other.getAccZ());
      }
      if (other.hasGyrX()) {
        setGyrX(other.getGyrX());
      }
      if (other.hasGyrY()) {
        setGyrY(other.getGyrY());
      }
      if (other.hasGyrZ()) {
        setGyrZ(other.getGyrZ());
      }
      if (other.hasAngleX()) {
        setAngleX(other.getAngleX());
      }
      if (other.hasAngleY()) {
        setAngleY(other.getAngleY());
      }
      if (other.hasAngleZ()) {
        setAngleZ(other.getAngleZ());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      messages.InertialState parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (messages.InertialState) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private float accX_ ;
    /**
     * <code>optional float acc_x = 1;</code>
     *
     * <pre>
     * Raw accelerometer data.
     * </pre>
     */
    public boolean hasAccX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional float acc_x = 1;</code>
     *
     * <pre>
     * Raw accelerometer data.
     * </pre>
     */
    public float getAccX() {
      return accX_;
    }
    /**
     * <code>optional float acc_x = 1;</code>
     *
     * <pre>
     * Raw accelerometer data.
     * </pre>
     */
    public Builder setAccX(float value) {
      bitField0_ |= 0x00000001;
      accX_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float acc_x = 1;</code>
     *
     * <pre>
     * Raw accelerometer data.
     * </pre>
     */
    public Builder clearAccX() {
      bitField0_ = (bitField0_ & ~0x00000001);
      accX_ = 0F;
      onChanged();
      return this;
    }

    private float accY_ ;
    /**
     * <code>optional float acc_y = 2;</code>
     */
    public boolean hasAccY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float acc_y = 2;</code>
     */
    public float getAccY() {
      return accY_;
    }
    /**
     * <code>optional float acc_y = 2;</code>
     */
    public Builder setAccY(float value) {
      bitField0_ |= 0x00000002;
      accY_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float acc_y = 2;</code>
     */
    public Builder clearAccY() {
      bitField0_ = (bitField0_ & ~0x00000002);
      accY_ = 0F;
      onChanged();
      return this;
    }

    private float accZ_ ;
    /**
     * <code>optional float acc_z = 3;</code>
     */
    public boolean hasAccZ() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float acc_z = 3;</code>
     */
    public float getAccZ() {
      return accZ_;
    }
    /**
     * <code>optional float acc_z = 3;</code>
     */
    public Builder setAccZ(float value) {
      bitField0_ |= 0x00000004;
      accZ_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float acc_z = 3;</code>
     */
    public Builder clearAccZ() {
      bitField0_ = (bitField0_ & ~0x00000004);
      accZ_ = 0F;
      onChanged();
      return this;
    }

    private float gyrX_ ;
    /**
     * <code>optional float gyr_x = 4;</code>
     *
     * <pre>
     * Raw gyrometer data.
     * </pre>
     */
    public boolean hasGyrX() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float gyr_x = 4;</code>
     *
     * <pre>
     * Raw gyrometer data.
     * </pre>
     */
    public float getGyrX() {
      return gyrX_;
    }
    /**
     * <code>optional float gyr_x = 4;</code>
     *
     * <pre>
     * Raw gyrometer data.
     * </pre>
     */
    public Builder setGyrX(float value) {
      bitField0_ |= 0x00000008;
      gyrX_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float gyr_x = 4;</code>
     *
     * <pre>
     * Raw gyrometer data.
     * </pre>
     */
    public Builder clearGyrX() {
      bitField0_ = (bitField0_ & ~0x00000008);
      gyrX_ = 0F;
      onChanged();
      return this;
    }

    private float gyrY_ ;
    /**
     * <code>optional float gyr_y = 5;</code>
     */
    public boolean hasGyrY() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional float gyr_y = 5;</code>
     */
    public float getGyrY() {
      return gyrY_;
    }
    /**
     * <code>optional float gyr_y = 5;</code>
     */
    public Builder setGyrY(float value) {
      bitField0_ |= 0x00000010;
      gyrY_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float gyr_y = 5;</code>
     */
    public Builder clearGyrY() {
      bitField0_ = (bitField0_ & ~0x00000010);
      gyrY_ = 0F;
      onChanged();
      return this;
    }

    private float gyrZ_ ;
    /**
     * <code>optional float gyr_z = 6;</code>
     */
    public boolean hasGyrZ() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional float gyr_z = 6;</code>
     */
    public float getGyrZ() {
      return gyrZ_;
    }
    /**
     * <code>optional float gyr_z = 6;</code>
     */
    public Builder setGyrZ(float value) {
      bitField0_ |= 0x00000020;
      gyrZ_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float gyr_z = 6;</code>
     */
    public Builder clearGyrZ() {
      bitField0_ = (bitField0_ & ~0x00000020);
      gyrZ_ = 0F;
      onChanged();
      return this;
    }

    private float angleX_ ;
    /**
     * <code>optional float angle_x = 7;</code>
     *
     * <pre>
     * Filtered angle data.
     * </pre>
     */
    public boolean hasAngleX() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float angle_x = 7;</code>
     *
     * <pre>
     * Filtered angle data.
     * </pre>
     */
    public float getAngleX() {
      return angleX_;
    }
    /**
     * <code>optional float angle_x = 7;</code>
     *
     * <pre>
     * Filtered angle data.
     * </pre>
     */
    public Builder setAngleX(float value) {
      bitField0_ |= 0x00000040;
      angleX_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float angle_x = 7;</code>
     *
     * <pre>
     * Filtered angle data.
     * </pre>
     */
    public Builder clearAngleX() {
      bitField0_ = (bitField0_ & ~0x00000040);
      angleX_ = 0F;
      onChanged();
      return this;
    }

    private float angleY_ ;
    /**
     * <code>optional float angle_y = 8;</code>
     */
    public boolean hasAngleY() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float angle_y = 8;</code>
     */
    public float getAngleY() {
      return angleY_;
    }
    /**
     * <code>optional float angle_y = 8;</code>
     */
    public Builder setAngleY(float value) {
      bitField0_ |= 0x00000080;
      angleY_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float angle_y = 8;</code>
     */
    public Builder clearAngleY() {
      bitField0_ = (bitField0_ & ~0x00000080);
      angleY_ = 0F;
      onChanged();
      return this;
    }

    private float angleZ_ ;
    /**
     * <code>optional float angle_z = 9;</code>
     */
    public boolean hasAngleZ() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional float angle_z = 9;</code>
     */
    public float getAngleZ() {
      return angleZ_;
    }
    /**
     * <code>optional float angle_z = 9;</code>
     */
    public Builder setAngleZ(float value) {
      bitField0_ |= 0x00000100;
      angleZ_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float angle_z = 9;</code>
     */
    public Builder clearAngleZ() {
      bitField0_ = (bitField0_ & ~0x00000100);
      angleZ_ = 0F;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:messages.InertialState)
  }

  static {
    defaultInstance = new InertialState(true);
    defaultInstance.initFields();
  }

  // @@protoc_insertion_point(class_scope:messages.InertialState)
}

