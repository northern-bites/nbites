// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FSR.proto

package messages;

/**
 * Protobuf type {@code messages.FSR}
 */
public final class FSR extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:messages.FSR)
    FSROrBuilder {
  // Use FSR.newBuilder() to construct.
  private FSR(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
    this.unknownFields = builder.getUnknownFields();
  }
  private FSR(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

  private static final FSR defaultInstance;
  public static FSR getDefaultInstance() {
    return defaultInstance;
  }

  public FSR getDefaultInstanceForType() {
    return defaultInstance;
  }

  private final com.google.protobuf.UnknownFieldSet unknownFields;
  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
    return this.unknownFields;
  }
  private FSR(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    initFields();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 13: {
            bitField0_ |= 0x00000001;
            lfl_ = input.readFloat();
            break;
          }
          case 21: {
            bitField0_ |= 0x00000002;
            lfr_ = input.readFloat();
            break;
          }
          case 29: {
            bitField0_ |= 0x00000004;
            lrl_ = input.readFloat();
            break;
          }
          case 37: {
            bitField0_ |= 0x00000008;
            lrr_ = input.readFloat();
            break;
          }
          case 45: {
            bitField0_ |= 0x00000010;
            rfl_ = input.readFloat();
            break;
          }
          case 53: {
            bitField0_ |= 0x00000020;
            rfr_ = input.readFloat();
            break;
          }
          case 61: {
            bitField0_ |= 0x00000040;
            rrl_ = input.readFloat();
            break;
          }
          case 69: {
            bitField0_ |= 0x00000080;
            rrr_ = input.readFloat();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e.getMessage()).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return messages._File_FSR.internal_static_messages_FSR_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return messages._File_FSR.internal_static_messages_FSR_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            messages.FSR.class, messages.FSR.Builder.class);
  }

  public static com.google.protobuf.Parser<FSR> PARSER =
      new com.google.protobuf.AbstractParser<FSR>() {
    public FSR parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new FSR(input, extensionRegistry);
    }
  };

  @java.lang.Override
  public com.google.protobuf.Parser<FSR> getParserForType() {
    return PARSER;
  }

  private int bitField0_;
  public static final int LFL_FIELD_NUMBER = 1;
  private float lfl_;
  /**
   * <code>optional float lfl = 1;</code>
   *
   * <pre>
   * Left foot.
   * </pre>
   */
  public boolean hasLfl() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>optional float lfl = 1;</code>
   *
   * <pre>
   * Left foot.
   * </pre>
   */
  public float getLfl() {
    return lfl_;
  }

  public static final int LFR_FIELD_NUMBER = 2;
  private float lfr_;
  /**
   * <code>optional float lfr = 2;</code>
   *
   * <pre>
   * front right
   * </pre>
   */
  public boolean hasLfr() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>optional float lfr = 2;</code>
   *
   * <pre>
   * front right
   * </pre>
   */
  public float getLfr() {
    return lfr_;
  }

  public static final int LRL_FIELD_NUMBER = 3;
  private float lrl_;
  /**
   * <code>optional float lrl = 3;</code>
   *
   * <pre>
   * rear left
   * </pre>
   */
  public boolean hasLrl() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <code>optional float lrl = 3;</code>
   *
   * <pre>
   * rear left
   * </pre>
   */
  public float getLrl() {
    return lrl_;
  }

  public static final int LRR_FIELD_NUMBER = 4;
  private float lrr_;
  /**
   * <code>optional float lrr = 4;</code>
   *
   * <pre>
   * rear right
   * </pre>
   */
  public boolean hasLrr() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <code>optional float lrr = 4;</code>
   *
   * <pre>
   * rear right
   * </pre>
   */
  public float getLrr() {
    return lrr_;
  }

  public static final int RFL_FIELD_NUMBER = 5;
  private float rfl_;
  /**
   * <code>optional float rfl = 5;</code>
   *
   * <pre>
   * Right foot.
   * </pre>
   */
  public boolean hasRfl() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <code>optional float rfl = 5;</code>
   *
   * <pre>
   * Right foot.
   * </pre>
   */
  public float getRfl() {
    return rfl_;
  }

  public static final int RFR_FIELD_NUMBER = 6;
  private float rfr_;
  /**
   * <code>optional float rfr = 6;</code>
   *
   * <pre>
   * front right
   * </pre>
   */
  public boolean hasRfr() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <code>optional float rfr = 6;</code>
   *
   * <pre>
   * front right
   * </pre>
   */
  public float getRfr() {
    return rfr_;
  }

  public static final int RRL_FIELD_NUMBER = 7;
  private float rrl_;
  /**
   * <code>optional float rrl = 7;</code>
   *
   * <pre>
   * rear left
   * </pre>
   */
  public boolean hasRrl() {
    return ((bitField0_ & 0x00000040) == 0x00000040);
  }
  /**
   * <code>optional float rrl = 7;</code>
   *
   * <pre>
   * rear left
   * </pre>
   */
  public float getRrl() {
    return rrl_;
  }

  public static final int RRR_FIELD_NUMBER = 8;
  private float rrr_;
  /**
   * <code>optional float rrr = 8;</code>
   *
   * <pre>
   * rear right
   * </pre>
   */
  public boolean hasRrr() {
    return ((bitField0_ & 0x00000080) == 0x00000080);
  }
  /**
   * <code>optional float rrr = 8;</code>
   *
   * <pre>
   * rear right
   * </pre>
   */
  public float getRrr() {
    return rrr_;
  }

  private void initFields() {
    lfl_ = 0F;
    lfr_ = 0F;
    lrl_ = 0F;
    lrr_ = 0F;
    rfl_ = 0F;
    rfr_ = 0F;
    rrl_ = 0F;
    rrr_ = 0F;
  }
  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeFloat(1, lfl_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeFloat(2, lfr_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeFloat(3, lrl_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeFloat(4, lrr_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeFloat(5, rfl_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeFloat(6, rfr_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      output.writeFloat(7, rrl_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      output.writeFloat(8, rrr_);
    }
    getUnknownFields().writeTo(output);
  }

  private int memoizedSerializedSize = -1;
  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(1, lfl_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(2, lfr_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(3, lrl_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(4, lrr_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(5, rfl_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(6, rfr_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(7, rrl_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(8, rrr_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  protected java.lang.Object writeReplace()
      throws java.io.ObjectStreamException {
    return super.writeReplace();
  }

  public static messages.FSR parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static messages.FSR parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static messages.FSR parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static messages.FSR parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static messages.FSR parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static messages.FSR parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static messages.FSR parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static messages.FSR parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static messages.FSR parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static messages.FSR parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public static Builder newBuilder() { return Builder.create(); }
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder(messages.FSR prototype) {
    return newBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() { return newBuilder(this); }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code messages.FSR}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:messages.FSR)
      messages.FSROrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return messages._File_FSR.internal_static_messages_FSR_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return messages._File_FSR.internal_static_messages_FSR_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              messages.FSR.class, messages.FSR.Builder.class);
    }

    // Construct using messages.FSR.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    private static Builder create() {
      return new Builder();
    }

    public Builder clear() {
      super.clear();
      lfl_ = 0F;
      bitField0_ = (bitField0_ & ~0x00000001);
      lfr_ = 0F;
      bitField0_ = (bitField0_ & ~0x00000002);
      lrl_ = 0F;
      bitField0_ = (bitField0_ & ~0x00000004);
      lrr_ = 0F;
      bitField0_ = (bitField0_ & ~0x00000008);
      rfl_ = 0F;
      bitField0_ = (bitField0_ & ~0x00000010);
      rfr_ = 0F;
      bitField0_ = (bitField0_ & ~0x00000020);
      rrl_ = 0F;
      bitField0_ = (bitField0_ & ~0x00000040);
      rrr_ = 0F;
      bitField0_ = (bitField0_ & ~0x00000080);
      return this;
    }

    public Builder clone() {
      return create().mergeFrom(buildPartial());
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return messages._File_FSR.internal_static_messages_FSR_descriptor;
    }

    public messages.FSR getDefaultInstanceForType() {
      return messages.FSR.getDefaultInstance();
    }

    public messages.FSR build() {
      messages.FSR result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public messages.FSR buildPartial() {
      messages.FSR result = new messages.FSR(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.lfl_ = lfl_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.lfr_ = lfr_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.lrl_ = lrl_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000008;
      }
      result.lrr_ = lrr_;
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000010;
      }
      result.rfl_ = rfl_;
      if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
        to_bitField0_ |= 0x00000020;
      }
      result.rfr_ = rfr_;
      if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
        to_bitField0_ |= 0x00000040;
      }
      result.rrl_ = rrl_;
      if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
        to_bitField0_ |= 0x00000080;
      }
      result.rrr_ = rrr_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof messages.FSR) {
        return mergeFrom((messages.FSR)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(messages.FSR other) {
      if (other == messages.FSR.getDefaultInstance()) return this;
      if (other.hasLfl()) {
        setLfl(other.getLfl());
      }
      if (other.hasLfr()) {
        setLfr(other.getLfr());
      }
      if (other.hasLrl()) {
        setLrl(other.getLrl());
      }
      if (other.hasLrr()) {
        setLrr(other.getLrr());
      }
      if (other.hasRfl()) {
        setRfl(other.getRfl());
      }
      if (other.hasRfr()) {
        setRfr(other.getRfr());
      }
      if (other.hasRrl()) {
        setRrl(other.getRrl());
      }
      if (other.hasRrr()) {
        setRrr(other.getRrr());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      messages.FSR parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (messages.FSR) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private float lfl_ ;
    /**
     * <code>optional float lfl = 1;</code>
     *
     * <pre>
     * Left foot.
     * </pre>
     */
    public boolean hasLfl() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional float lfl = 1;</code>
     *
     * <pre>
     * Left foot.
     * </pre>
     */
    public float getLfl() {
      return lfl_;
    }
    /**
     * <code>optional float lfl = 1;</code>
     *
     * <pre>
     * Left foot.
     * </pre>
     */
    public Builder setLfl(float value) {
      bitField0_ |= 0x00000001;
      lfl_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float lfl = 1;</code>
     *
     * <pre>
     * Left foot.
     * </pre>
     */
    public Builder clearLfl() {
      bitField0_ = (bitField0_ & ~0x00000001);
      lfl_ = 0F;
      onChanged();
      return this;
    }

    private float lfr_ ;
    /**
     * <code>optional float lfr = 2;</code>
     *
     * <pre>
     * front right
     * </pre>
     */
    public boolean hasLfr() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float lfr = 2;</code>
     *
     * <pre>
     * front right
     * </pre>
     */
    public float getLfr() {
      return lfr_;
    }
    /**
     * <code>optional float lfr = 2;</code>
     *
     * <pre>
     * front right
     * </pre>
     */
    public Builder setLfr(float value) {
      bitField0_ |= 0x00000002;
      lfr_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float lfr = 2;</code>
     *
     * <pre>
     * front right
     * </pre>
     */
    public Builder clearLfr() {
      bitField0_ = (bitField0_ & ~0x00000002);
      lfr_ = 0F;
      onChanged();
      return this;
    }

    private float lrl_ ;
    /**
     * <code>optional float lrl = 3;</code>
     *
     * <pre>
     * rear left
     * </pre>
     */
    public boolean hasLrl() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float lrl = 3;</code>
     *
     * <pre>
     * rear left
     * </pre>
     */
    public float getLrl() {
      return lrl_;
    }
    /**
     * <code>optional float lrl = 3;</code>
     *
     * <pre>
     * rear left
     * </pre>
     */
    public Builder setLrl(float value) {
      bitField0_ |= 0x00000004;
      lrl_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float lrl = 3;</code>
     *
     * <pre>
     * rear left
     * </pre>
     */
    public Builder clearLrl() {
      bitField0_ = (bitField0_ & ~0x00000004);
      lrl_ = 0F;
      onChanged();
      return this;
    }

    private float lrr_ ;
    /**
     * <code>optional float lrr = 4;</code>
     *
     * <pre>
     * rear right
     * </pre>
     */
    public boolean hasLrr() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float lrr = 4;</code>
     *
     * <pre>
     * rear right
     * </pre>
     */
    public float getLrr() {
      return lrr_;
    }
    /**
     * <code>optional float lrr = 4;</code>
     *
     * <pre>
     * rear right
     * </pre>
     */
    public Builder setLrr(float value) {
      bitField0_ |= 0x00000008;
      lrr_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float lrr = 4;</code>
     *
     * <pre>
     * rear right
     * </pre>
     */
    public Builder clearLrr() {
      bitField0_ = (bitField0_ & ~0x00000008);
      lrr_ = 0F;
      onChanged();
      return this;
    }

    private float rfl_ ;
    /**
     * <code>optional float rfl = 5;</code>
     *
     * <pre>
     * Right foot.
     * </pre>
     */
    public boolean hasRfl() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional float rfl = 5;</code>
     *
     * <pre>
     * Right foot.
     * </pre>
     */
    public float getRfl() {
      return rfl_;
    }
    /**
     * <code>optional float rfl = 5;</code>
     *
     * <pre>
     * Right foot.
     * </pre>
     */
    public Builder setRfl(float value) {
      bitField0_ |= 0x00000010;
      rfl_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float rfl = 5;</code>
     *
     * <pre>
     * Right foot.
     * </pre>
     */
    public Builder clearRfl() {
      bitField0_ = (bitField0_ & ~0x00000010);
      rfl_ = 0F;
      onChanged();
      return this;
    }

    private float rfr_ ;
    /**
     * <code>optional float rfr = 6;</code>
     *
     * <pre>
     * front right
     * </pre>
     */
    public boolean hasRfr() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional float rfr = 6;</code>
     *
     * <pre>
     * front right
     * </pre>
     */
    public float getRfr() {
      return rfr_;
    }
    /**
     * <code>optional float rfr = 6;</code>
     *
     * <pre>
     * front right
     * </pre>
     */
    public Builder setRfr(float value) {
      bitField0_ |= 0x00000020;
      rfr_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float rfr = 6;</code>
     *
     * <pre>
     * front right
     * </pre>
     */
    public Builder clearRfr() {
      bitField0_ = (bitField0_ & ~0x00000020);
      rfr_ = 0F;
      onChanged();
      return this;
    }

    private float rrl_ ;
    /**
     * <code>optional float rrl = 7;</code>
     *
     * <pre>
     * rear left
     * </pre>
     */
    public boolean hasRrl() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float rrl = 7;</code>
     *
     * <pre>
     * rear left
     * </pre>
     */
    public float getRrl() {
      return rrl_;
    }
    /**
     * <code>optional float rrl = 7;</code>
     *
     * <pre>
     * rear left
     * </pre>
     */
    public Builder setRrl(float value) {
      bitField0_ |= 0x00000040;
      rrl_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float rrl = 7;</code>
     *
     * <pre>
     * rear left
     * </pre>
     */
    public Builder clearRrl() {
      bitField0_ = (bitField0_ & ~0x00000040);
      rrl_ = 0F;
      onChanged();
      return this;
    }

    private float rrr_ ;
    /**
     * <code>optional float rrr = 8;</code>
     *
     * <pre>
     * rear right
     * </pre>
     */
    public boolean hasRrr() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float rrr = 8;</code>
     *
     * <pre>
     * rear right
     * </pre>
     */
    public float getRrr() {
      return rrr_;
    }
    /**
     * <code>optional float rrr = 8;</code>
     *
     * <pre>
     * rear right
     * </pre>
     */
    public Builder setRrr(float value) {
      bitField0_ |= 0x00000080;
      rrr_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float rrr = 8;</code>
     *
     * <pre>
     * rear right
     * </pre>
     */
    public Builder clearRrr() {
      bitField0_ = (bitField0_ & ~0x00000080);
      rrr_ = 0F;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:messages.FSR)
  }

  static {
    defaultInstance = new FSR(true);
    defaultInstance.initFields();
  }

  // @@protoc_insertion_point(class_scope:messages.FSR)
}

