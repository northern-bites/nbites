// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: VisionField.proto

package messages;

/**
 * Protobuf type {@code messages.VisualCorner}
 */
public final class VisualCorner extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:messages.VisualCorner)
    VisualCornerOrBuilder {
  // Use VisualCorner.newBuilder() to construct.
  private VisualCorner(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
    this.unknownFields = builder.getUnknownFields();
  }
  private VisualCorner(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

  private static final VisualCorner defaultInstance;
  public static VisualCorner getDefaultInstance() {
    return defaultInstance;
  }

  public VisualCorner getDefaultInstanceForType() {
    return defaultInstance;
  }

  private final com.google.protobuf.UnknownFieldSet unknownFields;
  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
    return this.unknownFields;
  }
  private VisualCorner(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    initFields();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            messages.VisualDetection.Builder subBuilder = null;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              subBuilder = visualDetection_.toBuilder();
            }
            visualDetection_ = input.readMessage(messages.VisualDetection.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(visualDetection_);
              visualDetection_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000001;
            break;
          }
          case 21: {
            bitField0_ |= 0x00000002;
            orientation_ = input.readFloat();
            break;
          }
          case 24: {
            int rawValue = input.readEnum();
            messages.VisualCorner.shape value = messages.VisualCorner.shape.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(3, rawValue);
            } else {
              bitField0_ |= 0x00000004;
              cornerType_ = value;
            }
            break;
          }
          case 37: {
            bitField0_ |= 0x00000008;
            physicalOrientation_ = input.readFloat();
            break;
          }
          case 40: {
            int rawValue = input.readEnum();
            messages.VisualCorner.corner_id value = messages.VisualCorner.corner_id.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(5, rawValue);
              } else {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                possId_ = new java.util.ArrayList<messages.VisualCorner.corner_id>();
                mutable_bitField0_ |= 0x00000010;
              }
              possId_.add(value);
            }
            break;
          }
          case 42: {
            int length = input.readRawVarint32();
            int oldLimit = input.pushLimit(length);
            while(input.getBytesUntilLimit() > 0) {
              int rawValue = input.readEnum();
              messages.VisualCorner.corner_id value = messages.VisualCorner.corner_id.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
                } else {
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                  possId_ = new java.util.ArrayList<messages.VisualCorner.corner_id>();
                  mutable_bitField0_ |= 0x00000010;
                }
                possId_.add(value);
              }
            }
            input.popLimit(oldLimit);
            break;
          }
          case 48: {
            bitField0_ |= 0x00000010;
            x_ = input.readSInt32();
            break;
          }
          case 56: {
            bitField0_ |= 0x00000020;
            y_ = input.readSInt32();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e.getMessage()).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
        possId_ = java.util.Collections.unmodifiableList(possId_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return messages._File_VisionField.internal_static_messages_VisualCorner_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return messages._File_VisionField.internal_static_messages_VisualCorner_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            messages.VisualCorner.class, messages.VisualCorner.Builder.class);
  }

  public static com.google.protobuf.Parser<VisualCorner> PARSER =
      new com.google.protobuf.AbstractParser<VisualCorner>() {
    public VisualCorner parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new VisualCorner(input, extensionRegistry);
    }
  };

  @java.lang.Override
  public com.google.protobuf.Parser<VisualCorner> getParserForType() {
    return PARSER;
  }

  /**
   * Protobuf enum {@code messages.VisualCorner.corner_id}
   */
  public enum corner_id
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>L_INNER_CORNER = 0;</code>
     */
    L_INNER_CORNER(0, 0),
    /**
     * <code>L_OUTER_CORNER = 1;</code>
     */
    L_OUTER_CORNER(1, 1),
    /**
     * <code>T_CORNER = 2;</code>
     */
    T_CORNER(2, 2),
    /**
     * <code>CENTER_CIRCLE = 3;</code>
     */
    CENTER_CIRCLE(3, 3),
    /**
     * <code>BLUE_GOAL_T = 4;</code>
     *
     * <pre>
     * FUZZY/CLEAR CORNER IDS start at = 4
     * </pre>
     */
    BLUE_GOAL_T(4, 4),
    /**
     * <code>YELLOW_GOAL_T = 5;</code>
     */
    YELLOW_GOAL_T(5, 5),
    /**
     * <code>BLUE_GOAL_RIGHT_L_OR_YELLOW_GOAL_LEFT_L = 6;</code>
     */
    BLUE_GOAL_RIGHT_L_OR_YELLOW_GOAL_LEFT_L(6, 6),
    /**
     * <code>BLUE_GOAL_LEFT_L_OR_YELLOW_GOAL_RIGHT_L = 7;</code>
     */
    BLUE_GOAL_LEFT_L_OR_YELLOW_GOAL_RIGHT_L(7, 7),
    /**
     * <code>BLUE_CORNER_TOP_L_OR_YELLOW_CORNER_BOTTOM_L = 8;</code>
     */
    BLUE_CORNER_TOP_L_OR_YELLOW_CORNER_BOTTOM_L(8, 8),
    /**
     * <code>BLUE_CORNER_BOTTOM_L_OR_YELLOW_CORNER_TOP_L = 9;</code>
     */
    BLUE_CORNER_BOTTOM_L_OR_YELLOW_CORNER_TOP_L(9, 9),
    /**
     * <code>CORNER_INNER_L = 10;</code>
     */
    CORNER_INNER_L(10, 10),
    /**
     * <code>GOAL_BOX_INNER_L = 11;</code>
     */
    GOAL_BOX_INNER_L(11, 11),
    /**
     * <code>BLUE_GOAL_OUTER_L = 12;</code>
     *
     * <pre>
     * FUZZY/CLEAR CORNER IDS start at = 12
     * </pre>
     */
    BLUE_GOAL_OUTER_L(12, 12),
    /**
     * <code>YELLOW_GOAL_OUTER_L = 13;</code>
     */
    YELLOW_GOAL_OUTER_L(13, 13),
    /**
     * <code>CENTER_T = 14;</code>
     */
    CENTER_T(14, 14),
    /**
     * <code>BLUE_CORNER_TOP_L = 15;</code>
     *
     * <pre>
     * SPECIFIC CORNER IDS start at = 15
     * </pre>
     */
    BLUE_CORNER_TOP_L(15, 15),
    /**
     * <code>BLUE_CORNER_BOTTOM_L = 16;</code>
     */
    BLUE_CORNER_BOTTOM_L(16, 16),
    /**
     * <code>BLUE_GOAL_LEFT_T = 17;</code>
     */
    BLUE_GOAL_LEFT_T(17, 17),
    /**
     * <code>BLUE_GOAL_RIGHT_T = 18;</code>
     */
    BLUE_GOAL_RIGHT_T(18, 18),
    /**
     * <code>BLUE_GOAL_LEFT_L = 19;</code>
     */
    BLUE_GOAL_LEFT_L(19, 19),
    /**
     * <code>BLUE_GOAL_RIGHT_L = 20;</code>
     *
     * <pre>
     * 20
     * </pre>
     */
    BLUE_GOAL_RIGHT_L(20, 20),
    /**
     * <code>CENTER_BOTTOM_T = 21;</code>
     */
    CENTER_BOTTOM_T(21, 21),
    /**
     * <code>CENTER_TOP_T = 22;</code>
     */
    CENTER_TOP_T(22, 22),
    /**
     * <code>YELLOW_CORNER_BOTTOM_L = 23;</code>
     */
    YELLOW_CORNER_BOTTOM_L(23, 23),
    /**
     * <code>YELLOW_CORNER_TOP_L = 24;</code>
     */
    YELLOW_CORNER_TOP_L(24, 24),
    /**
     * <code>YELLOW_GOAL_LEFT_T = 25;</code>
     *
     * <pre>
     * 25
     * </pre>
     */
    YELLOW_GOAL_LEFT_T(25, 25),
    /**
     * <code>YELLOW_GOAL_RIGHT_T = 26;</code>
     */
    YELLOW_GOAL_RIGHT_T(26, 26),
    /**
     * <code>YELLOW_GOAL_LEFT_L = 27;</code>
     */
    YELLOW_GOAL_LEFT_L(27, 27),
    /**
     * <code>YELLOW_GOAL_RIGHT_L = 28;</code>
     */
    YELLOW_GOAL_RIGHT_L(28, 28),
    /**
     * <code>CORNER_NO_IDEA_ID = 29;</code>
     */
    CORNER_NO_IDEA_ID(29, 29),
    /**
     * <code>TOP_CC = 30;</code>
     *
     * <pre>
     * 30
     * </pre>
     */
    TOP_CC(30, 30),
    /**
     * <code>BOTTOM_CC = 31;</code>
     */
    BOTTOM_CC(31, 31),
    ;

    /**
     * <code>L_INNER_CORNER = 0;</code>
     */
    public static final int L_INNER_CORNER_VALUE = 0;
    /**
     * <code>L_OUTER_CORNER = 1;</code>
     */
    public static final int L_OUTER_CORNER_VALUE = 1;
    /**
     * <code>T_CORNER = 2;</code>
     */
    public static final int T_CORNER_VALUE = 2;
    /**
     * <code>CENTER_CIRCLE = 3;</code>
     */
    public static final int CENTER_CIRCLE_VALUE = 3;
    /**
     * <code>BLUE_GOAL_T = 4;</code>
     *
     * <pre>
     * FUZZY/CLEAR CORNER IDS start at = 4
     * </pre>
     */
    public static final int BLUE_GOAL_T_VALUE = 4;
    /**
     * <code>YELLOW_GOAL_T = 5;</code>
     */
    public static final int YELLOW_GOAL_T_VALUE = 5;
    /**
     * <code>BLUE_GOAL_RIGHT_L_OR_YELLOW_GOAL_LEFT_L = 6;</code>
     */
    public static final int BLUE_GOAL_RIGHT_L_OR_YELLOW_GOAL_LEFT_L_VALUE = 6;
    /**
     * <code>BLUE_GOAL_LEFT_L_OR_YELLOW_GOAL_RIGHT_L = 7;</code>
     */
    public static final int BLUE_GOAL_LEFT_L_OR_YELLOW_GOAL_RIGHT_L_VALUE = 7;
    /**
     * <code>BLUE_CORNER_TOP_L_OR_YELLOW_CORNER_BOTTOM_L = 8;</code>
     */
    public static final int BLUE_CORNER_TOP_L_OR_YELLOW_CORNER_BOTTOM_L_VALUE = 8;
    /**
     * <code>BLUE_CORNER_BOTTOM_L_OR_YELLOW_CORNER_TOP_L = 9;</code>
     */
    public static final int BLUE_CORNER_BOTTOM_L_OR_YELLOW_CORNER_TOP_L_VALUE = 9;
    /**
     * <code>CORNER_INNER_L = 10;</code>
     */
    public static final int CORNER_INNER_L_VALUE = 10;
    /**
     * <code>GOAL_BOX_INNER_L = 11;</code>
     */
    public static final int GOAL_BOX_INNER_L_VALUE = 11;
    /**
     * <code>BLUE_GOAL_OUTER_L = 12;</code>
     *
     * <pre>
     * FUZZY/CLEAR CORNER IDS start at = 12
     * </pre>
     */
    public static final int BLUE_GOAL_OUTER_L_VALUE = 12;
    /**
     * <code>YELLOW_GOAL_OUTER_L = 13;</code>
     */
    public static final int YELLOW_GOAL_OUTER_L_VALUE = 13;
    /**
     * <code>CENTER_T = 14;</code>
     */
    public static final int CENTER_T_VALUE = 14;
    /**
     * <code>BLUE_CORNER_TOP_L = 15;</code>
     *
     * <pre>
     * SPECIFIC CORNER IDS start at = 15
     * </pre>
     */
    public static final int BLUE_CORNER_TOP_L_VALUE = 15;
    /**
     * <code>BLUE_CORNER_BOTTOM_L = 16;</code>
     */
    public static final int BLUE_CORNER_BOTTOM_L_VALUE = 16;
    /**
     * <code>BLUE_GOAL_LEFT_T = 17;</code>
     */
    public static final int BLUE_GOAL_LEFT_T_VALUE = 17;
    /**
     * <code>BLUE_GOAL_RIGHT_T = 18;</code>
     */
    public static final int BLUE_GOAL_RIGHT_T_VALUE = 18;
    /**
     * <code>BLUE_GOAL_LEFT_L = 19;</code>
     */
    public static final int BLUE_GOAL_LEFT_L_VALUE = 19;
    /**
     * <code>BLUE_GOAL_RIGHT_L = 20;</code>
     *
     * <pre>
     * 20
     * </pre>
     */
    public static final int BLUE_GOAL_RIGHT_L_VALUE = 20;
    /**
     * <code>CENTER_BOTTOM_T = 21;</code>
     */
    public static final int CENTER_BOTTOM_T_VALUE = 21;
    /**
     * <code>CENTER_TOP_T = 22;</code>
     */
    public static final int CENTER_TOP_T_VALUE = 22;
    /**
     * <code>YELLOW_CORNER_BOTTOM_L = 23;</code>
     */
    public static final int YELLOW_CORNER_BOTTOM_L_VALUE = 23;
    /**
     * <code>YELLOW_CORNER_TOP_L = 24;</code>
     */
    public static final int YELLOW_CORNER_TOP_L_VALUE = 24;
    /**
     * <code>YELLOW_GOAL_LEFT_T = 25;</code>
     *
     * <pre>
     * 25
     * </pre>
     */
    public static final int YELLOW_GOAL_LEFT_T_VALUE = 25;
    /**
     * <code>YELLOW_GOAL_RIGHT_T = 26;</code>
     */
    public static final int YELLOW_GOAL_RIGHT_T_VALUE = 26;
    /**
     * <code>YELLOW_GOAL_LEFT_L = 27;</code>
     */
    public static final int YELLOW_GOAL_LEFT_L_VALUE = 27;
    /**
     * <code>YELLOW_GOAL_RIGHT_L = 28;</code>
     */
    public static final int YELLOW_GOAL_RIGHT_L_VALUE = 28;
    /**
     * <code>CORNER_NO_IDEA_ID = 29;</code>
     */
    public static final int CORNER_NO_IDEA_ID_VALUE = 29;
    /**
     * <code>TOP_CC = 30;</code>
     *
     * <pre>
     * 30
     * </pre>
     */
    public static final int TOP_CC_VALUE = 30;
    /**
     * <code>BOTTOM_CC = 31;</code>
     */
    public static final int BOTTOM_CC_VALUE = 31;


    public final int getNumber() { return value; }

    public static corner_id valueOf(int value) {
      switch (value) {
        case 0: return L_INNER_CORNER;
        case 1: return L_OUTER_CORNER;
        case 2: return T_CORNER;
        case 3: return CENTER_CIRCLE;
        case 4: return BLUE_GOAL_T;
        case 5: return YELLOW_GOAL_T;
        case 6: return BLUE_GOAL_RIGHT_L_OR_YELLOW_GOAL_LEFT_L;
        case 7: return BLUE_GOAL_LEFT_L_OR_YELLOW_GOAL_RIGHT_L;
        case 8: return BLUE_CORNER_TOP_L_OR_YELLOW_CORNER_BOTTOM_L;
        case 9: return BLUE_CORNER_BOTTOM_L_OR_YELLOW_CORNER_TOP_L;
        case 10: return CORNER_INNER_L;
        case 11: return GOAL_BOX_INNER_L;
        case 12: return BLUE_GOAL_OUTER_L;
        case 13: return YELLOW_GOAL_OUTER_L;
        case 14: return CENTER_T;
        case 15: return BLUE_CORNER_TOP_L;
        case 16: return BLUE_CORNER_BOTTOM_L;
        case 17: return BLUE_GOAL_LEFT_T;
        case 18: return BLUE_GOAL_RIGHT_T;
        case 19: return BLUE_GOAL_LEFT_L;
        case 20: return BLUE_GOAL_RIGHT_L;
        case 21: return CENTER_BOTTOM_T;
        case 22: return CENTER_TOP_T;
        case 23: return YELLOW_CORNER_BOTTOM_L;
        case 24: return YELLOW_CORNER_TOP_L;
        case 25: return YELLOW_GOAL_LEFT_T;
        case 26: return YELLOW_GOAL_RIGHT_T;
        case 27: return YELLOW_GOAL_LEFT_L;
        case 28: return YELLOW_GOAL_RIGHT_L;
        case 29: return CORNER_NO_IDEA_ID;
        case 30: return TOP_CC;
        case 31: return BOTTOM_CC;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<corner_id>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<corner_id>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<corner_id>() {
            public corner_id findValueByNumber(int number) {
              return corner_id.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return messages.VisualCorner.getDescriptor().getEnumTypes().get(0);
    }

    private static final corner_id[] VALUES = values();

    public static corner_id valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private corner_id(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:messages.VisualCorner.corner_id)
  }

  /**
   * Protobuf enum {@code messages.VisualCorner.shape}
   */
  public enum shape
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN = 0;</code>
     */
    UNKNOWN(0, 0),
    /**
     * <code>INNER_L = 1;</code>
     */
    INNER_L(1, 1),
    /**
     * <code>OUTER_L = 2;</code>
     */
    OUTER_L(2, 2),
    /**
     * <code>T = 3;</code>
     */
    T(3, 3),
    /**
     * <code>CIRCLE = 4;</code>
     */
    CIRCLE(4, 4),
    /**
     * <code>GOAL_L = 5;</code>
     *
     * <pre>
     * secondary shapes - arranged from most general to most specific
     * </pre>
     */
    GOAL_L(5, 5),
    /**
     * <code>CORNER_L = 6;</code>
     */
    CORNER_L(6, 6),
    /**
     * <code>LEFT_GOAL_L = 7;</code>
     */
    LEFT_GOAL_L(7, 7),
    /**
     * <code>RIGHT_GOAL_L = 8;</code>
     */
    RIGHT_GOAL_L(8, 8),
    /**
     * <code>RIGHT_GOAL_CORNER = 9;</code>
     *
     * <pre>
     * 9
     * </pre>
     */
    RIGHT_GOAL_CORNER(9, 9),
    /**
     * <code>LEFT_GOAL_CORNER = 10;</code>
     */
    LEFT_GOAL_CORNER(10, 10),
    /**
     * <code>GOAL_T = 11;</code>
     */
    GOAL_T(11, 11),
    /**
     * <code>SIDE_T = 12;</code>
     */
    SIDE_T(12, 12),
    /**
     * <code>LEFT_GOAL_T = 13;</code>
     *
     * <pre>
     * 13
     * </pre>
     */
    LEFT_GOAL_T(13, 13),
    /**
     * <code>RIGHT_GOAL_T = 14;</code>
     */
    RIGHT_GOAL_T(14, 14),
    /**
     * <code>YELLOW_GOAL_BOTTOM = 15;</code>
     */
    YELLOW_GOAL_BOTTOM(15, 15),
    /**
     * <code>YELLOW_GOAL_TOP = 16;</code>
     */
    YELLOW_GOAL_TOP(16, 16),
    /**
     * <code>BLUE_GOAL_BOTTOM = 17;</code>
     *
     * <pre>
     * 17
     * </pre>
     */
    BLUE_GOAL_BOTTOM(17, 17),
    /**
     * <code>BLUE_GOAL_TOP = 18;</code>
     */
    BLUE_GOAL_TOP(18, 18),
    /**
     * <code>LEFT_GOAL_YELLOW_L = 19;</code>
     */
    LEFT_GOAL_YELLOW_L(19, 19),
    /**
     * <code>LEFT_GOAL_BLUE_L = 20;</code>
     */
    LEFT_GOAL_BLUE_L(20, 20),
    /**
     * <code>RIGHT_GOAL_YELLOW_L = 21;</code>
     *
     * <pre>
     * 21
     * </pre>
     */
    RIGHT_GOAL_YELLOW_L(21, 21),
    /**
     * <code>RIGHT_GOAL_BLUE_L = 22;</code>
     */
    RIGHT_GOAL_BLUE_L(22, 22),
    /**
     * <code>RIGHT_GOAL_YELLOW_T = 23;</code>
     */
    RIGHT_GOAL_YELLOW_T(23, 23),
    /**
     * <code>LEFT_GOAL_YELLOW_T = 24;</code>
     */
    LEFT_GOAL_YELLOW_T(24, 24),
    /**
     * <code>RIGHT_GOAL_BLUE_T = 25;</code>
     *
     * <pre>
     * 25
     * </pre>
     */
    RIGHT_GOAL_BLUE_T(25, 25),
    /**
     * <code>LEFT_GOAL_BLUE_T = 26;</code>
     */
    LEFT_GOAL_BLUE_T(26, 26),
    /**
     * <code>CENTER_T_TOP = 27;</code>
     */
    CENTER_T_TOP(27, 27),
    /**
     * <code>CENTER_T_BOTTOM = 28;</code>
     */
    CENTER_T_BOTTOM(28, 28),
    /**
     * <code>CENTER_CIRCLE_TOP = 29;</code>
     *
     * <pre>
     * 29
     * </pre>
     */
    CENTER_CIRCLE_TOP(29, 29),
    /**
     * <code>CENTER_CIRCLE_BOTTOM = 30;</code>
     */
    CENTER_CIRCLE_BOTTOM(30, 30),
    ;

    /**
     * <code>UNKNOWN = 0;</code>
     */
    public static final int UNKNOWN_VALUE = 0;
    /**
     * <code>INNER_L = 1;</code>
     */
    public static final int INNER_L_VALUE = 1;
    /**
     * <code>OUTER_L = 2;</code>
     */
    public static final int OUTER_L_VALUE = 2;
    /**
     * <code>T = 3;</code>
     */
    public static final int T_VALUE = 3;
    /**
     * <code>CIRCLE = 4;</code>
     */
    public static final int CIRCLE_VALUE = 4;
    /**
     * <code>GOAL_L = 5;</code>
     *
     * <pre>
     * secondary shapes - arranged from most general to most specific
     * </pre>
     */
    public static final int GOAL_L_VALUE = 5;
    /**
     * <code>CORNER_L = 6;</code>
     */
    public static final int CORNER_L_VALUE = 6;
    /**
     * <code>LEFT_GOAL_L = 7;</code>
     */
    public static final int LEFT_GOAL_L_VALUE = 7;
    /**
     * <code>RIGHT_GOAL_L = 8;</code>
     */
    public static final int RIGHT_GOAL_L_VALUE = 8;
    /**
     * <code>RIGHT_GOAL_CORNER = 9;</code>
     *
     * <pre>
     * 9
     * </pre>
     */
    public static final int RIGHT_GOAL_CORNER_VALUE = 9;
    /**
     * <code>LEFT_GOAL_CORNER = 10;</code>
     */
    public static final int LEFT_GOAL_CORNER_VALUE = 10;
    /**
     * <code>GOAL_T = 11;</code>
     */
    public static final int GOAL_T_VALUE = 11;
    /**
     * <code>SIDE_T = 12;</code>
     */
    public static final int SIDE_T_VALUE = 12;
    /**
     * <code>LEFT_GOAL_T = 13;</code>
     *
     * <pre>
     * 13
     * </pre>
     */
    public static final int LEFT_GOAL_T_VALUE = 13;
    /**
     * <code>RIGHT_GOAL_T = 14;</code>
     */
    public static final int RIGHT_GOAL_T_VALUE = 14;
    /**
     * <code>YELLOW_GOAL_BOTTOM = 15;</code>
     */
    public static final int YELLOW_GOAL_BOTTOM_VALUE = 15;
    /**
     * <code>YELLOW_GOAL_TOP = 16;</code>
     */
    public static final int YELLOW_GOAL_TOP_VALUE = 16;
    /**
     * <code>BLUE_GOAL_BOTTOM = 17;</code>
     *
     * <pre>
     * 17
     * </pre>
     */
    public static final int BLUE_GOAL_BOTTOM_VALUE = 17;
    /**
     * <code>BLUE_GOAL_TOP = 18;</code>
     */
    public static final int BLUE_GOAL_TOP_VALUE = 18;
    /**
     * <code>LEFT_GOAL_YELLOW_L = 19;</code>
     */
    public static final int LEFT_GOAL_YELLOW_L_VALUE = 19;
    /**
     * <code>LEFT_GOAL_BLUE_L = 20;</code>
     */
    public static final int LEFT_GOAL_BLUE_L_VALUE = 20;
    /**
     * <code>RIGHT_GOAL_YELLOW_L = 21;</code>
     *
     * <pre>
     * 21
     * </pre>
     */
    public static final int RIGHT_GOAL_YELLOW_L_VALUE = 21;
    /**
     * <code>RIGHT_GOAL_BLUE_L = 22;</code>
     */
    public static final int RIGHT_GOAL_BLUE_L_VALUE = 22;
    /**
     * <code>RIGHT_GOAL_YELLOW_T = 23;</code>
     */
    public static final int RIGHT_GOAL_YELLOW_T_VALUE = 23;
    /**
     * <code>LEFT_GOAL_YELLOW_T = 24;</code>
     */
    public static final int LEFT_GOAL_YELLOW_T_VALUE = 24;
    /**
     * <code>RIGHT_GOAL_BLUE_T = 25;</code>
     *
     * <pre>
     * 25
     * </pre>
     */
    public static final int RIGHT_GOAL_BLUE_T_VALUE = 25;
    /**
     * <code>LEFT_GOAL_BLUE_T = 26;</code>
     */
    public static final int LEFT_GOAL_BLUE_T_VALUE = 26;
    /**
     * <code>CENTER_T_TOP = 27;</code>
     */
    public static final int CENTER_T_TOP_VALUE = 27;
    /**
     * <code>CENTER_T_BOTTOM = 28;</code>
     */
    public static final int CENTER_T_BOTTOM_VALUE = 28;
    /**
     * <code>CENTER_CIRCLE_TOP = 29;</code>
     *
     * <pre>
     * 29
     * </pre>
     */
    public static final int CENTER_CIRCLE_TOP_VALUE = 29;
    /**
     * <code>CENTER_CIRCLE_BOTTOM = 30;</code>
     */
    public static final int CENTER_CIRCLE_BOTTOM_VALUE = 30;


    public final int getNumber() { return value; }

    public static shape valueOf(int value) {
      switch (value) {
        case 0: return UNKNOWN;
        case 1: return INNER_L;
        case 2: return OUTER_L;
        case 3: return T;
        case 4: return CIRCLE;
        case 5: return GOAL_L;
        case 6: return CORNER_L;
        case 7: return LEFT_GOAL_L;
        case 8: return RIGHT_GOAL_L;
        case 9: return RIGHT_GOAL_CORNER;
        case 10: return LEFT_GOAL_CORNER;
        case 11: return GOAL_T;
        case 12: return SIDE_T;
        case 13: return LEFT_GOAL_T;
        case 14: return RIGHT_GOAL_T;
        case 15: return YELLOW_GOAL_BOTTOM;
        case 16: return YELLOW_GOAL_TOP;
        case 17: return BLUE_GOAL_BOTTOM;
        case 18: return BLUE_GOAL_TOP;
        case 19: return LEFT_GOAL_YELLOW_L;
        case 20: return LEFT_GOAL_BLUE_L;
        case 21: return RIGHT_GOAL_YELLOW_L;
        case 22: return RIGHT_GOAL_BLUE_L;
        case 23: return RIGHT_GOAL_YELLOW_T;
        case 24: return LEFT_GOAL_YELLOW_T;
        case 25: return RIGHT_GOAL_BLUE_T;
        case 26: return LEFT_GOAL_BLUE_T;
        case 27: return CENTER_T_TOP;
        case 28: return CENTER_T_BOTTOM;
        case 29: return CENTER_CIRCLE_TOP;
        case 30: return CENTER_CIRCLE_BOTTOM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<shape>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<shape>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<shape>() {
            public shape findValueByNumber(int number) {
              return shape.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return messages.VisualCorner.getDescriptor().getEnumTypes().get(1);
    }

    private static final shape[] VALUES = values();

    public static shape valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private shape(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:messages.VisualCorner.shape)
  }

  private int bitField0_;
  public static final int VISUAL_DETECTION_FIELD_NUMBER = 1;
  private messages.VisualDetection visualDetection_;
  /**
   * <code>optional .messages.VisualDetection visual_detection = 1;</code>
   */
  public boolean hasVisualDetection() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>optional .messages.VisualDetection visual_detection = 1;</code>
   */
  public messages.VisualDetection getVisualDetection() {
    return visualDetection_;
  }
  /**
   * <code>optional .messages.VisualDetection visual_detection = 1;</code>
   */
  public messages.VisualDetectionOrBuilder getVisualDetectionOrBuilder() {
    return visualDetection_;
  }

  public static final int ORIENTATION_FIELD_NUMBER = 2;
  private float orientation_;
  /**
   * <code>optional float orientation = 2;</code>
   */
  public boolean hasOrientation() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>optional float orientation = 2;</code>
   */
  public float getOrientation() {
    return orientation_;
  }

  public static final int CORNER_TYPE_FIELD_NUMBER = 3;
  private messages.VisualCorner.shape cornerType_;
  /**
   * <code>optional .messages.VisualCorner.shape corner_type = 3;</code>
   */
  public boolean hasCornerType() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <code>optional .messages.VisualCorner.shape corner_type = 3;</code>
   */
  public messages.VisualCorner.shape getCornerType() {
    return cornerType_;
  }

  public static final int PHYSICAL_ORIENTATION_FIELD_NUMBER = 4;
  private float physicalOrientation_;
  /**
   * <code>optional float physical_orientation = 4;</code>
   */
  public boolean hasPhysicalOrientation() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <code>optional float physical_orientation = 4;</code>
   */
  public float getPhysicalOrientation() {
    return physicalOrientation_;
  }

  public static final int POSS_ID_FIELD_NUMBER = 5;
  private java.util.List<messages.VisualCorner.corner_id> possId_;
  /**
   * <code>repeated .messages.VisualCorner.corner_id poss_id = 5;</code>
   */
  public java.util.List<messages.VisualCorner.corner_id> getPossIdList() {
    return possId_;
  }
  /**
   * <code>repeated .messages.VisualCorner.corner_id poss_id = 5;</code>
   */
  public int getPossIdCount() {
    return possId_.size();
  }
  /**
   * <code>repeated .messages.VisualCorner.corner_id poss_id = 5;</code>
   */
  public messages.VisualCorner.corner_id getPossId(int index) {
    return possId_.get(index);
  }

  public static final int X_FIELD_NUMBER = 6;
  private int x_;
  /**
   * <code>optional sint32 x = 6;</code>
   */
  public boolean hasX() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <code>optional sint32 x = 6;</code>
   */
  public int getX() {
    return x_;
  }

  public static final int Y_FIELD_NUMBER = 7;
  private int y_;
  /**
   * <code>optional sint32 y = 7;</code>
   */
  public boolean hasY() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <code>optional sint32 y = 7;</code>
   */
  public int getY() {
    return y_;
  }

  private void initFields() {
    visualDetection_ = messages.VisualDetection.getDefaultInstance();
    orientation_ = 0F;
    cornerType_ = messages.VisualCorner.shape.UNKNOWN;
    physicalOrientation_ = 0F;
    possId_ = java.util.Collections.emptyList();
    x_ = 0;
    y_ = 0;
  }
  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeMessage(1, visualDetection_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeFloat(2, orientation_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeEnum(3, cornerType_.getNumber());
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeFloat(4, physicalOrientation_);
    }
    for (int i = 0; i < possId_.size(); i++) {
      output.writeEnum(5, possId_.get(i).getNumber());
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeSInt32(6, x_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeSInt32(7, y_);
    }
    getUnknownFields().writeTo(output);
  }

  private int memoizedSerializedSize = -1;
  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, visualDetection_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(2, orientation_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, cornerType_.getNumber());
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(4, physicalOrientation_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < possId_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(possId_.get(i).getNumber());
      }
      size += dataSize;
      size += 1 * possId_.size();
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(6, x_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(7, y_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  protected java.lang.Object writeReplace()
      throws java.io.ObjectStreamException {
    return super.writeReplace();
  }

  public static messages.VisualCorner parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static messages.VisualCorner parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static messages.VisualCorner parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static messages.VisualCorner parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static messages.VisualCorner parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static messages.VisualCorner parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static messages.VisualCorner parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static messages.VisualCorner parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static messages.VisualCorner parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static messages.VisualCorner parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public static Builder newBuilder() { return Builder.create(); }
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder(messages.VisualCorner prototype) {
    return newBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() { return newBuilder(this); }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code messages.VisualCorner}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:messages.VisualCorner)
      messages.VisualCornerOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return messages._File_VisionField.internal_static_messages_VisualCorner_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return messages._File_VisionField.internal_static_messages_VisualCorner_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              messages.VisualCorner.class, messages.VisualCorner.Builder.class);
    }

    // Construct using messages.VisualCorner.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        getVisualDetectionFieldBuilder();
      }
    }
    private static Builder create() {
      return new Builder();
    }

    public Builder clear() {
      super.clear();
      if (visualDetectionBuilder_ == null) {
        visualDetection_ = messages.VisualDetection.getDefaultInstance();
      } else {
        visualDetectionBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      orientation_ = 0F;
      bitField0_ = (bitField0_ & ~0x00000002);
      cornerType_ = messages.VisualCorner.shape.UNKNOWN;
      bitField0_ = (bitField0_ & ~0x00000004);
      physicalOrientation_ = 0F;
      bitField0_ = (bitField0_ & ~0x00000008);
      possId_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000010);
      x_ = 0;
      bitField0_ = (bitField0_ & ~0x00000020);
      y_ = 0;
      bitField0_ = (bitField0_ & ~0x00000040);
      return this;
    }

    public Builder clone() {
      return create().mergeFrom(buildPartial());
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return messages._File_VisionField.internal_static_messages_VisualCorner_descriptor;
    }

    public messages.VisualCorner getDefaultInstanceForType() {
      return messages.VisualCorner.getDefaultInstance();
    }

    public messages.VisualCorner build() {
      messages.VisualCorner result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public messages.VisualCorner buildPartial() {
      messages.VisualCorner result = new messages.VisualCorner(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      if (visualDetectionBuilder_ == null) {
        result.visualDetection_ = visualDetection_;
      } else {
        result.visualDetection_ = visualDetectionBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.orientation_ = orientation_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.cornerType_ = cornerType_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000008;
      }
      result.physicalOrientation_ = physicalOrientation_;
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        possId_ = java.util.Collections.unmodifiableList(possId_);
        bitField0_ = (bitField0_ & ~0x00000010);
      }
      result.possId_ = possId_;
      if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
        to_bitField0_ |= 0x00000010;
      }
      result.x_ = x_;
      if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
        to_bitField0_ |= 0x00000020;
      }
      result.y_ = y_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof messages.VisualCorner) {
        return mergeFrom((messages.VisualCorner)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(messages.VisualCorner other) {
      if (other == messages.VisualCorner.getDefaultInstance()) return this;
      if (other.hasVisualDetection()) {
        mergeVisualDetection(other.getVisualDetection());
      }
      if (other.hasOrientation()) {
        setOrientation(other.getOrientation());
      }
      if (other.hasCornerType()) {
        setCornerType(other.getCornerType());
      }
      if (other.hasPhysicalOrientation()) {
        setPhysicalOrientation(other.getPhysicalOrientation());
      }
      if (!other.possId_.isEmpty()) {
        if (possId_.isEmpty()) {
          possId_ = other.possId_;
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          ensurePossIdIsMutable();
          possId_.addAll(other.possId_);
        }
        onChanged();
      }
      if (other.hasX()) {
        setX(other.getX());
      }
      if (other.hasY()) {
        setY(other.getY());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      messages.VisualCorner parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (messages.VisualCorner) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private messages.VisualDetection visualDetection_ = messages.VisualDetection.getDefaultInstance();
    private com.google.protobuf.SingleFieldBuilder<
        messages.VisualDetection, messages.VisualDetection.Builder, messages.VisualDetectionOrBuilder> visualDetectionBuilder_;
    /**
     * <code>optional .messages.VisualDetection visual_detection = 1;</code>
     */
    public boolean hasVisualDetection() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .messages.VisualDetection visual_detection = 1;</code>
     */
    public messages.VisualDetection getVisualDetection() {
      if (visualDetectionBuilder_ == null) {
        return visualDetection_;
      } else {
        return visualDetectionBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .messages.VisualDetection visual_detection = 1;</code>
     */
    public Builder setVisualDetection(messages.VisualDetection value) {
      if (visualDetectionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        visualDetection_ = value;
        onChanged();
      } else {
        visualDetectionBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <code>optional .messages.VisualDetection visual_detection = 1;</code>
     */
    public Builder setVisualDetection(
        messages.VisualDetection.Builder builderForValue) {
      if (visualDetectionBuilder_ == null) {
        visualDetection_ = builderForValue.build();
        onChanged();
      } else {
        visualDetectionBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <code>optional .messages.VisualDetection visual_detection = 1;</code>
     */
    public Builder mergeVisualDetection(messages.VisualDetection value) {
      if (visualDetectionBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            visualDetection_ != messages.VisualDetection.getDefaultInstance()) {
          visualDetection_ =
            messages.VisualDetection.newBuilder(visualDetection_).mergeFrom(value).buildPartial();
        } else {
          visualDetection_ = value;
        }
        onChanged();
      } else {
        visualDetectionBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <code>optional .messages.VisualDetection visual_detection = 1;</code>
     */
    public Builder clearVisualDetection() {
      if (visualDetectionBuilder_ == null) {
        visualDetection_ = messages.VisualDetection.getDefaultInstance();
        onChanged();
      } else {
        visualDetectionBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }
    /**
     * <code>optional .messages.VisualDetection visual_detection = 1;</code>
     */
    public messages.VisualDetection.Builder getVisualDetectionBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getVisualDetectionFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .messages.VisualDetection visual_detection = 1;</code>
     */
    public messages.VisualDetectionOrBuilder getVisualDetectionOrBuilder() {
      if (visualDetectionBuilder_ != null) {
        return visualDetectionBuilder_.getMessageOrBuilder();
      } else {
        return visualDetection_;
      }
    }
    /**
     * <code>optional .messages.VisualDetection visual_detection = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        messages.VisualDetection, messages.VisualDetection.Builder, messages.VisualDetectionOrBuilder> 
        getVisualDetectionFieldBuilder() {
      if (visualDetectionBuilder_ == null) {
        visualDetectionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            messages.VisualDetection, messages.VisualDetection.Builder, messages.VisualDetectionOrBuilder>(
                getVisualDetection(),
                getParentForChildren(),
                isClean());
        visualDetection_ = null;
      }
      return visualDetectionBuilder_;
    }

    private float orientation_ ;
    /**
     * <code>optional float orientation = 2;</code>
     */
    public boolean hasOrientation() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float orientation = 2;</code>
     */
    public float getOrientation() {
      return orientation_;
    }
    /**
     * <code>optional float orientation = 2;</code>
     */
    public Builder setOrientation(float value) {
      bitField0_ |= 0x00000002;
      orientation_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float orientation = 2;</code>
     */
    public Builder clearOrientation() {
      bitField0_ = (bitField0_ & ~0x00000002);
      orientation_ = 0F;
      onChanged();
      return this;
    }

    private messages.VisualCorner.shape cornerType_ = messages.VisualCorner.shape.UNKNOWN;
    /**
     * <code>optional .messages.VisualCorner.shape corner_type = 3;</code>
     */
    public boolean hasCornerType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .messages.VisualCorner.shape corner_type = 3;</code>
     */
    public messages.VisualCorner.shape getCornerType() {
      return cornerType_;
    }
    /**
     * <code>optional .messages.VisualCorner.shape corner_type = 3;</code>
     */
    public Builder setCornerType(messages.VisualCorner.shape value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      cornerType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional .messages.VisualCorner.shape corner_type = 3;</code>
     */
    public Builder clearCornerType() {
      bitField0_ = (bitField0_ & ~0x00000004);
      cornerType_ = messages.VisualCorner.shape.UNKNOWN;
      onChanged();
      return this;
    }

    private float physicalOrientation_ ;
    /**
     * <code>optional float physical_orientation = 4;</code>
     */
    public boolean hasPhysicalOrientation() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float physical_orientation = 4;</code>
     */
    public float getPhysicalOrientation() {
      return physicalOrientation_;
    }
    /**
     * <code>optional float physical_orientation = 4;</code>
     */
    public Builder setPhysicalOrientation(float value) {
      bitField0_ |= 0x00000008;
      physicalOrientation_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional float physical_orientation = 4;</code>
     */
    public Builder clearPhysicalOrientation() {
      bitField0_ = (bitField0_ & ~0x00000008);
      physicalOrientation_ = 0F;
      onChanged();
      return this;
    }

    private java.util.List<messages.VisualCorner.corner_id> possId_ =
      java.util.Collections.emptyList();
    private void ensurePossIdIsMutable() {
      if (!((bitField0_ & 0x00000010) == 0x00000010)) {
        possId_ = new java.util.ArrayList<messages.VisualCorner.corner_id>(possId_);
        bitField0_ |= 0x00000010;
      }
    }
    /**
     * <code>repeated .messages.VisualCorner.corner_id poss_id = 5;</code>
     */
    public java.util.List<messages.VisualCorner.corner_id> getPossIdList() {
      return java.util.Collections.unmodifiableList(possId_);
    }
    /**
     * <code>repeated .messages.VisualCorner.corner_id poss_id = 5;</code>
     */
    public int getPossIdCount() {
      return possId_.size();
    }
    /**
     * <code>repeated .messages.VisualCorner.corner_id poss_id = 5;</code>
     */
    public messages.VisualCorner.corner_id getPossId(int index) {
      return possId_.get(index);
    }
    /**
     * <code>repeated .messages.VisualCorner.corner_id poss_id = 5;</code>
     */
    public Builder setPossId(
        int index, messages.VisualCorner.corner_id value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePossIdIsMutable();
      possId_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .messages.VisualCorner.corner_id poss_id = 5;</code>
     */
    public Builder addPossId(messages.VisualCorner.corner_id value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePossIdIsMutable();
      possId_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .messages.VisualCorner.corner_id poss_id = 5;</code>
     */
    public Builder addAllPossId(
        java.lang.Iterable<? extends messages.VisualCorner.corner_id> values) {
      ensurePossIdIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, possId_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .messages.VisualCorner.corner_id poss_id = 5;</code>
     */
    public Builder clearPossId() {
      possId_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }

    private int x_ ;
    /**
     * <code>optional sint32 x = 6;</code>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional sint32 x = 6;</code>
     */
    public int getX() {
      return x_;
    }
    /**
     * <code>optional sint32 x = 6;</code>
     */
    public Builder setX(int value) {
      bitField0_ |= 0x00000020;
      x_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sint32 x = 6;</code>
     */
    public Builder clearX() {
      bitField0_ = (bitField0_ & ~0x00000020);
      x_ = 0;
      onChanged();
      return this;
    }

    private int y_ ;
    /**
     * <code>optional sint32 y = 7;</code>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional sint32 y = 7;</code>
     */
    public int getY() {
      return y_;
    }
    /**
     * <code>optional sint32 y = 7;</code>
     */
    public Builder setY(int value) {
      bitField0_ |= 0x00000040;
      y_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sint32 y = 7;</code>
     */
    public Builder clearY() {
      bitField0_ = (bitField0_ & ~0x00000040);
      y_ = 0;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:messages.VisualCorner)
  }

  static {
    defaultInstance = new VisualCorner(true);
    defaultInstance.initFields();
  }

  // @@protoc_insertion_point(class_scope:messages.VisualCorner)
}

