README :: May 12, 2011

files/  <-- stuff you will need to optimize gaits (only on Webots)
gaits/  <-- gaits generated by the optimizer
swarms/ <-- full swarm pickle files in varying states of completion

util/scripts/beforeOptimize.sh <-- scripts to run that set up optimizer
util/scripts/afterOptimize.sh

::ON THE NAO::

Steps to run the optimizer:
 (put the harness on the robot. let him fall over so that he stops walking, but
  don't let him actually hit the ground. IMPORTANT: don't keep the robot from
  falling. They'll never learn to walk if you baby them)

 1) run beforeOptimize.sh to fetch current state file from our server
 2) run 'make install' to put behavior (pGaitLearner) onto robot
 3) Walk the robot around. Game playing is the state he walks in, to try
    another gait put him in penalized, sit him down (stiffnesses off) and then
    put him back into game playing.
 4) Once you're done running the robot around, run afterOptimize.sh script to
    save the progress you made back to the server.

RUN THE OPTIMIZER ON DIFFERENT ROBOTS!!

::GENERAL INFO::

The gait optimizer behavior (pGaitLearner.py) loads our Particle Swarm
Optimizer (found in noggin/util/PSO.py) and will automatically save
the swarm state and revert Webots after each gait trial. The current
PSO state is pickled as PSO_pGaitLearner.pickle, and generally shows
up in {WEBOTS}/projects/contests/robotstadium/controllers/nao_team_1/.

On the robot, the PSO state is saved after every complete walk cycle.

You can extract the best gait from a swarm using src/man/noggin/util/ExtractGait.py

The file will need indentation fix-ups, but then can be put into src/man/motion/gaits
and loaded.

email Nathan (gnmerritt@gmail) if you have any more questions.